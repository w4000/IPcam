#ifndef _NUE2_MULTI_CHIP_REG_H_
#define _NUE2_MULTI_CHIP_REG_H_

#include "nue2_platform.h"

#define _NUE2_REG_BASE_ADDR       0xF0D50000

/*
    NUE2_RST  :    [0x0, 0x1],			bits : 0
    NUE2_START:    [0x0, 0x1],			bits : 1
    LL_FIRE   :    [0x0, 0x1],			bits : 28
*/
#define NUE2_CONTROL_REGISTER_OFS 0x0000
REGDEF_BEGIN(NUE2_CONTROL_REGISTER)
    REGDEF_BIT(NUE2_RST  ,        1)
    REGDEF_BIT(NUE2_START,        1)
    REGDEF_BIT(          ,        26)
    REGDEF_BIT(LL_FIRE   ,        1)
REGDEF_END(NUE2_CONTROL_REGISTER)

/*
    NUE2_YUV2RGB_EN    :    [0x0, 0x1],			bits : 0
    NUE2_SUB_EN        :    [0x0, 0x1],			bits : 1
    NUE2_PAD_EN        :    [0x0, 0x1],			bits : 2
    NUE2_HSV_EN        :    [0x0, 0x1],			bits : 3
    NUE2_ROTATE_EN     :    [0x0, 0x1],			bits : 4
    NUE2_YCC_ENC_EN    :    [0x0, 0x1],			bits : 5
    NUE2_IN_FMT        :    [0x0, 0x3],			bits : 13_12
    NUE2_OUT_SIGNEDNESS:    [0x0, 0x1],			bits : 14
    NUE2_SUB_MODE      :    [0x0, 0x1],			bits : 15
    NUE2_HSV_OUT_MODE  :    [0x0, 0x1],			bits : 16
    NUE2_ROTATE_MODE   :    [0x0, 0x3],			bits : 18_17
    NUE2_FLIP_MODE     :    [0x0, 0x3],			bits : 20_19    CHIP:528
    NUE2_SCALE_H_MODE  :    [0x0, 0x3],			bits : 24       CHIP:528
    NUE2_SCALE_V_MODE  :    [0x0, 0x3],			bits : 25       CHIP:528
*/
#define NUE2_FUNCTION_ENABLE_REGISTER0_OFS 0x0004
REGDEF_BEGIN(NUE2_FUNCTION_ENABLE_REGISTER0)
    REGDEF_BIT(NUE2_YUV2RGB_EN    ,        1)
    REGDEF_BIT(NUE2_SUB_EN        ,        1)
    REGDEF_BIT(NUE2_PAD_EN        ,        1)
    REGDEF_BIT(NUE2_HSV_EN        ,        1)
    REGDEF_BIT(NUE2_ROTATE_EN     ,        1)
	REGDEF_BIT(                   ,        7)
    REGDEF_BIT(NUE2_IN_FMT        ,        2)
    REGDEF_BIT(NUE2_OUT_SIGNEDNESS,        1)
    REGDEF_BIT(NUE2_SUB_MODE      ,        1)
    REGDEF_BIT(NUE2_HSV_OUT_MODE  ,        1)
    REGDEF_BIT(NUE2_ROTATE_MODE   ,        2)
	REGDEF_BIT(NUE2_FLIP_MODE     ,        2)
    REGDEF_BIT(                   ,        3)
    REGDEF_BIT(NUE2_SCALE_H_MODE  ,        1)
    REGDEF_BIT(NUE2_SCALE_V_MODE  ,        1)
REGDEF_END(NUE2_FUNCTION_ENABLE_REGISTER0)


/*
    DRAM_SAI0:    [0x0, 0xffffffff],			bits : 31_0
*/
#define DMA_TO_NUE2_REGISTER0_OFS 0x0008
REGDEF_BEGIN(DMA_TO_NUE2_REGISTER0)
    REGDEF_BIT(DRAM_SAI0,        32)
REGDEF_END(DMA_TO_NUE2_REGISTER0)


/*
    DRAM_SAI1:    [0x0, 0xffffffff],			bits : 31_0
*/
#define DMA_TO_NUE2_REGISTER1_OFS 0x000c
REGDEF_BEGIN(DMA_TO_NUE2_REGISTER1)
    REGDEF_BIT(DRAM_SAI1,        32)
REGDEF_END(DMA_TO_NUE2_REGISTER1)


/*
    DRAM_SAI2:    [0x0, 0xffffffff],			bits : 31_0
*/
#define DMA_TO_NUE2_REGISTER2_OFS 0x0010
REGDEF_BEGIN(DMA_TO_NUE2_REGISTER2)
    REGDEF_BIT(DRAM_SAI2,        32)
REGDEF_END(DMA_TO_NUE2_REGISTER2)


/*
    DRAM_SAILL:    [0x0, 0xffffffff],			bits : 31_0
*/
#define DMA_TO_NUE2_REGISTER3_OFS 0x0014
REGDEF_BEGIN(DMA_TO_NUE2_REGISTER3)
    REGDEF_BIT(DRAM_SAILL,        32)
REGDEF_END(DMA_TO_NUE2_REGISTER3)


/*
    DRAM_SAO0:    [0x0, 0xffffffff],			bits : 31_0
*/
#define NUE2_TO_DMA_RESULT_REGISTER0_OFS 0x0018
REGDEF_BEGIN(NUE2_TO_DMA_RESULT_REGISTER0)
    REGDEF_BIT(DRAM_SAO0,        32)
REGDEF_END(NUE2_TO_DMA_RESULT_REGISTER0)


/*
    DRAM_SAO1:    [0x0, 0xffffffff],			bits : 31_0
*/
#define NUE2_TO_DMA_RESULT_REGISTER1_OFS 0x001c
REGDEF_BEGIN(NUE2_TO_DMA_RESULT_REGISTER1)
    REGDEF_BIT(DRAM_SAO1,        32)
REGDEF_END(NUE2_TO_DMA_RESULT_REGISTER1)


/*
    DRAM_SAO2:    [0x0, 0x7fffffff],			bits : 30_0
*/
#define NUE2_TO_DMA_RESULT_REGISTER2_OFS 0x0020
REGDEF_BEGIN(NUE2_TO_DMA_RESULT_REGISTER2)
    REGDEF_BIT(DRAM_SAO2,        32)
REGDEF_END(NUE2_TO_DMA_RESULT_REGISTER2)


/*
    DRAM_OFSI0:    [0x0, 0x1ffff],			bits : 16_0
*/
#define NUE2_INPUT_LINE_OFFSET_REGISTER0_OFS 0x0024
REGDEF_BEGIN(NUE2_INPUT_LINE_OFFSET_REGISTER0)
    REGDEF_BIT(DRAM_OFSI0,        17)
REGDEF_END(NUE2_INPUT_LINE_OFFSET_REGISTER0)


/*
    DRAM_OFSI1:    [0x0, 0x1ffff],			bits : 16_0
*/
#define NUE2_INPUT_LINE_OFFSET_REGISTER1_OFS 0x0028
REGDEF_BEGIN(NUE2_INPUT_LINE_OFFSET_REGISTER1)
    REGDEF_BIT(DRAM_OFSI1,        17)
REGDEF_END(NUE2_INPUT_LINE_OFFSET_REGISTER1)


/*
    DRAM_OFSI2:    [0x0, 0x1ffff],			bits : 16_0
*/
#define INPUT_LINE_OFFSET_REGISTER2_OFS 0x002c
REGDEF_BEGIN(INPUT_LINE_OFFSET_REGISTER2)
    REGDEF_BIT(DRAM_OFSI2,        17)
REGDEF_END(INPUT_LINE_OFFSET_REGISTER2)


/*
    DRAM_OFSO0:    [0x0, 0x1ffff],			bits : 16_0
*/
#define OUTPUT_LINE_OFFSET_REGISTER0_OFS 0x0030
REGDEF_BEGIN(OUTPUT_LINE_OFFSET_REGISTER0)
    REGDEF_BIT(DRAM_OFSO0,        17)
REGDEF_END(OUTPUT_LINE_OFFSET_REGISTER0)


/*
    DRAM_OFSO1:    [0x0, 0x1ffff],			bits : 16_0
*/
#define OUTPUT_LINE_OFFSET_REGISTER1_OFS 0x0034
REGDEF_BEGIN(OUTPUT_LINE_OFFSET_REGISTER1)
    REGDEF_BIT(DRAM_OFSO1,        17)
REGDEF_END(OUTPUT_LINE_OFFSET_REGISTER1)


/*
    DRAM_OFSO2:    [0x0, 0x1ffff],			bits : 16_0
*/
#define OUTPUT_LINE_OFFSET_REGISTER2_OFS 0x0038
REGDEF_BEGIN(OUTPUT_LINE_OFFSET_REGISTER2)
    REGDEF_BIT(DRAM_OFSO2,        17)
REGDEF_END(OUTPUT_LINE_OFFSET_REGISTER2)


/*
    INTE_FRM_END    :    [0x0, 0x1],			bits : 0
    INTE_DMAIN0END  :    [0x0, 0x1],			bits : 1
    INTE_DMAIN1END  :    [0x0, 0x1],			bits : 2
    INTE_DMAIN2END  :    [0x0, 0x1],			bits : 3
    INTE_ENC_OUTOVFL:    [0x0, 0x1],			bits : 4    CHIP:520
    INTE_SCL_ERR    :    [0x0, 0x1],			bits : 5    CHIP:520
    INTE_SUB_ERR    :    [0x0, 0x1],			bits : 6    CHIP:520
    INTE_LLEND      :    [0x0, 0x1],			bits : 8
    INTE_LLERROR    :    [0x0, 0x1],			bits : 9
    INTE_LLJOBEND   :    [0x0, 0x1],			bits : 10   CHIP:528
    INTE_SW_RESET   :    [0x0, 0x1],			bits : 16   CHIP:528
	INTE_CHECKSUM_MISMATCH0   : [0x0, 0x1],     bits : 17   CHIP:560
	INTE_CHECKSUM_MISMATCH1   : [0x0, 0x1],     bits : 18   CHIP:560
	INTE_CHECKSUM_MISMATCH2   : [0x0, 0x1],     bits : 19   CHIP:560

*/
#define NUE2_INTERRUPT_ENABLE_REGISTER_OFS 0x003c
REGDEF_BEGIN(NUE2_INTERRUPT_ENABLE_REGISTER)
    REGDEF_BIT(INTE_FRM_END    ,        1)
    REGDEF_BIT(INTE_DMAIN0END  ,        1)
    REGDEF_BIT(INTE_DMAIN1END  ,        1)
    REGDEF_BIT(INTE_DMAIN2END  ,        1)
    REGDEF_BIT(INTE_ENC_OUTOVFL,        1)
    REGDEF_BIT(INTE_SCL_ERR    ,        1)
    REGDEF_BIT(INTE_SUB_ERR    ,        1)
    REGDEF_BIT(                ,        1)
    REGDEF_BIT(INTE_LLEND      ,        1)
    REGDEF_BIT(INTE_LLERROR    ,        1)
    REGDEF_BIT(INTE_LLJOBEND   ,        1)
    REGDEF_BIT(                ,        5)
    REGDEF_BIT(INTE_SW_RESET   ,        1)
	REGDEF_BIT(INTE_CHECKSUM_MISMATCH0, 1)
    REGDEF_BIT(INTE_CHECKSUM_MISMATCH1, 1)
    REGDEF_BIT(INTE_CHECKSUM_MISMATCH2, 1)
REGDEF_END(NUE2_INTERRUPT_ENABLE_REGISTER)

/*
    INT_FRM_END    :    [0x0, 0x1],			bits : 0
    INT_DMAIN0END  :    [0x0, 0x1],			bits : 1
    INT_DMAIN1END  :    [0x0, 0x1],			bits : 2
    INT_DMAIN2END  :    [0x0, 0x1],			bits : 3
    INT_ENC_OUTOVFL:    [0x0, 0x1],			bits : 4    CHIP:520
    INT_SCL_ERR    :    [0x0, 0x1],			bits : 5    CHIP:520
    INT_SUB_ERR    :    [0x0, 0x1],			bits : 6    CHIP:520
    INT_LLEND      :    [0x0, 0x1],			bits : 8
    INT_LLERROR    :    [0x0, 0x1],			bits : 9
    INT_LLJOBEND   :    [0x0, 0x1],			bits : 10   CHIP:528
    INT_SW_RESET   :    [0x0, 0x1],			bits : 16   CHIP:528
	INT_CHECKSUM_MISMATCH0   : [0x0, 0x1],  bits : 17   CHIP:560
	INT_CHECKSUM_MISMATCH1   : [0x0, 0x1],  bits : 18   CHIP:560
	INT_CHECKSUM_MISMATCH2   : [0x0, 0x1],  bits : 19   CHIP:560
	
*/
#define NUE2_INTERRUPT_STATUS_REGISTER_OFS 0x0040
REGDEF_BEGIN(NUE2_INTERRUPT_STATUS_REGISTER)
    REGDEF_BIT(INT_FRM_END    ,        1)
    REGDEF_BIT(INT_DMAIN0END  ,        1)
    REGDEF_BIT(INT_DMAIN1END  ,        1)
    REGDEF_BIT(INT_DMAIN2END  ,        1)
    REGDEF_BIT(INT_ENC_OUTOVFL,        1)
    REGDEF_BIT(INT_SCL_ERR    ,        1)
    REGDEF_BIT(INT_SUB_ERR    ,        1)
    REGDEF_BIT(               ,        1)
    REGDEF_BIT(INT_LLEND      ,        1)
    REGDEF_BIT(INT_LLERROR    ,        1)
    REGDEF_BIT(INT_LLJOBEND   ,        1)
    REGDEF_BIT(               ,        5)
    REGDEF_BIT(INT_SW_RESET   ,        1)
	REGDEF_BIT(INT_CHECKSUM_MISMATCH0, 1)
	REGDEF_BIT(INT_CHECKSUM_MISMATCH1, 1)
	REGDEF_BIT(INT_CHECKSUM_MISMATCH2, 1)
REGDEF_END(NUE2_INTERRUPT_STATUS_REGISTER)

/*
    NUE2_IN_WIDTH :    [0x0, 0x7ff],			bits : 10_0
    NUE2_IN_HEIGHT:    [0x0, 0x7ff],			bits : 26_16    CHIP:520_only
*/
#define NUE2_INPUT_SIZE_REGISTER0_OFS 0x0044
REGDEF_BEGIN(NUE2_INPUT_SIZE_REGISTER0)
    REGDEF_BIT(NUE2_IN_WIDTH ,        11)
    REGDEF_BIT(              ,        5)
    REGDEF_BIT(NUE2_IN_HEIGHT,        11)
REGDEF_END(NUE2_INPUT_SIZE_REGISTER0)

/*
    NUE2_H_DNRATE  :    [0x0, 0x7f],			bits : 6_0
    NUE2_V_DNRATE  :    [0x0, 0x7f],			bits : 14_8
    NUE2_H_FILTMODE:    [0x0, 0x1],			    bits : 16
    NUE2_H_FILTCOEF:    [0x0, 0x3f],			bits : 22_17
    NUE2_V_FILTMODE:    [0x0, 0x1],			    bits : 24
    NUE2_V_FILTCOEF:    [0x0, 0x3f],			bits : 30_25
*/
#define SCALE_DOWN_RATE_REGISTER0_OFS 0x0048
REGDEF_BEGIN(SCALE_DOWN_RATE_REGISTER0)
    REGDEF_BIT(NUE2_H_DNRATE  ,        7)
    REGDEF_BIT(               ,        1)
    REGDEF_BIT(NUE2_V_DNRATE  ,        7)
    REGDEF_BIT(               ,        1)
    REGDEF_BIT(NUE2_H_FILTMODE,        1)
    REGDEF_BIT(NUE2_H_FILTCOEF,        6)
    REGDEF_BIT(               ,        1)
    REGDEF_BIT(NUE2_V_FILTMODE,        1)
    REGDEF_BIT(NUE2_V_FILTCOEF,        6)
REGDEF_END(SCALE_DOWN_RATE_REGISTER0)


/*
    NUE2_H_SFACT:    [0x0, 0xffff],			bits : 15_0
    NUE2_V_SFACT:    [0x0, 0xffff],			bits : 31_16
*/
#define SCALE_DOWN_RATE_REGISTER1_OFS 0x004c
REGDEF_BEGIN(SCALE_DOWN_RATE_REGISTER1)
    REGDEF_BIT(NUE2_H_SFACT,        16)
    REGDEF_BIT(NUE2_V_SFACT,        16)
REGDEF_END(SCALE_DOWN_RATE_REGISTER1)


/*
    NUE2_INI_H_DNRATE:    [0x0, 0x7f],			bits : 6_0
    NUE2_INI_H_SFACT :    [0x0, 0x1ffff],			bits : 31_15
*/
#define SCALE_DOWN_RATE_REGISTER2_OFS 0x0050
REGDEF_BEGIN(SCALE_DOWN_RATE_REGISTER2)
    REGDEF_BIT(NUE2_INI_H_DNRATE,        7)
    REGDEF_BIT(                 ,        8)
    REGDEF_BIT(NUE2_INI_H_SFACT ,        17)
REGDEF_END(SCALE_DOWN_RATE_REGISTER2)

/*
    NUE2_FINAL_H_DNRATE:    [0x0, 0x7f],			bits : 6_0
    NUE2_FINAL_H_SFACT :    [0x0, 0x1ffff],			bits : 31_15
*/
#define SCALE_DOWN_RATE_REGISTER3_OFS 0x0054
REGDEF_BEGIN(SCALE_DOWN_RATE_REGISTER3)
    REGDEF_BIT(NUE2_FINAL_H_DNRATE,        7)
    REGDEF_BIT(                   ,        8)
    REGDEF_BIT(NUE2_FINAL_H_SFACT ,        17)
REGDEF_END(SCALE_DOWN_RATE_REGISTER3)

/*
    NUE2_H_SCL_SIZE:    [0x0, 0x7ff],			bits : 10_0
    NUE2_V_SCL_SIZE:    [0x0, 0x7ff],			bits : 26_16    CHIP:520_only
*/
#define SCALING_OUTPUT_SIZE_REGISTER0_OFS 0x0058
REGDEF_BEGIN(SCALING_OUTPUT_SIZE_REGISTER0)
    REGDEF_BIT(NUE2_H_SCL_SIZE,        11)
    REGDEF_BIT(               ,        5)
    REGDEF_BIT(NUE2_V_SCL_SIZE,        11)
REGDEF_END(SCALING_OUTPUT_SIZE_REGISTER0)

/*
    NUE2_SUB_IN_WIDTH :    [0x0, 0x7ff],			bits : 10_0
    NUE2_SUB_IN_HEIGHT:    [0x0, 0x7ff],			bits : 26_16    CHIP:520_only
*/
#define MEAN_SUBTRACTION_REGISTER0_OFS 0x005c
REGDEF_BEGIN(MEAN_SUBTRACTION_REGISTER0)
    REGDEF_BIT(NUE2_SUB_IN_WIDTH ,        11)
    REGDEF_BIT(                  ,        5)
    REGDEF_BIT(NUE2_SUB_IN_HEIGHT,        11)
REGDEF_END(MEAN_SUBTRACTION_REGISTER0)

/*
    NUE2_SUB_COEF_0:    [0x0, 0xff],			bits : 7_0
    NUE2_SUB_COEF_1:    [0x0, 0xff],			bits : 15_8
    NUE2_SUB_COEF_2:    [0x0, 0xff],			bits : 23_16
    NUE2_SUB_DUP   :    [0x0, 0x3],			    bits : 25_24
    NUE2_SUB_SHF   :    [0x0, 0x3],			    bits : 29_28     CHIP:520_only
*/
#define MEAN_SUBTRACTION_REGISTER1_OFS 0x0060
REGDEF_BEGIN(MEAN_SUBTRACTION_REGISTER1)
    REGDEF_BIT(NUE2_SUB_COEF_0,        8)
    REGDEF_BIT(NUE2_SUB_COEF_1,        8)
    REGDEF_BIT(NUE2_SUB_COEF_2,        8)
    REGDEF_BIT(NUE2_SUB_DUP   ,        2)
    REGDEF_BIT(               ,        2)
    REGDEF_BIT(NUE2_SUB_SHF   ,        2)
REGDEF_END(MEAN_SUBTRACTION_REGISTER1)

/*
    NUE2_PAD_CROP_X:    [0x0, 0x7ff],			bits : 10_0
    NUE2_PAD_CROP_Y:    [0x0, 0x7ff],			bits : 26_16     CHIP:520_only
*/
#define PADDING_REGISTER0_OFS 0x0064
REGDEF_BEGIN(PADDING_REGISTER0)
    REGDEF_BIT(NUE2_PAD_CROP_X,        11)
    REGDEF_BIT(               ,        5)
    REGDEF_BIT(NUE2_PAD_CROP_Y,        11)
REGDEF_END(PADDING_REGISTER0)

/*
    NUE2_PAD_CROP_WIDTH :    [0x0, 0xfff],			bits : 11_0
    NUE2_PAD_CROP_HEIGHT:    [0x0, 0xfff],			bits : 26_16     CHIP:520_only
*/
#define PADDING_REGISTER1_OFS 0x0068
REGDEF_BEGIN(PADDING_REGISTER1)
    REGDEF_BIT(NUE2_PAD_CROP_WIDTH ,        11)
    REGDEF_BIT(                    ,        5)
    REGDEF_BIT(NUE2_PAD_CROP_HEIGHT,        11)
REGDEF_END(PADDING_REGISTER1)

/*
    NUE2_PAD_OUT_X:    [0x0, 0xffff],			bits : 11_0
    NUE2_PAD_OUT_Y:    [0x0, 0xffff],			bits : 27_16
*/
#define PADDING_REGISTER2_OFS 0x006c
REGDEF_BEGIN(PADDING_REGISTER2)
    REGDEF_BIT(NUE2_PAD_OUT_X,        12)
	REGDEF_BIT(              ,         4)
    REGDEF_BIT(NUE2_PAD_OUT_Y,        12)
	REGDEF_BIT(              ,         4)
REGDEF_END(PADDING_REGISTER2)


/*
    NUE2_PAD_OUT_WIDTH :    [0x0, 0xfff],			bits : 11_0
    NUE2_PAD_OUT_HEIGHT:    [0x0, 0xfff],			bits : 27_16
*/
#define PADDING_REGISTER3_OFS 0x0070
REGDEF_BEGIN(PADDING_REGISTER3)
    REGDEF_BIT(NUE2_PAD_OUT_WIDTH ,        12)
    REGDEF_BIT(                   ,        4)
    REGDEF_BIT(NUE2_PAD_OUT_HEIGHT,        12)
REGDEF_END(PADDING_REGISTER3)


/*
    NUE2_PAD_VAL_0:    [0x0, 0xff],			bits : 7_0
    NUE2_PAD_VAL_1:    [0x0, 0xff],			bits : 15_8
    NUE2_PAD_VAL_2:    [0x0, 0xff],			bits : 23_16
*/
#define PADDING_REGISTER4_OFS 0x0074
REGDEF_BEGIN(PADDING_REGISTER4)
    REGDEF_BIT(NUE2_PAD_VAL_0,        8)
    REGDEF_BIT(NUE2_PAD_VAL_1,        8)
    REGDEF_BIT(NUE2_PAD_VAL_2,        8)
REGDEF_END(PADDING_REGISTER4)

/*
    NUE2_HUE_SFT:    [0x0, 0x7f],			bits : 6_0
*/
#define HSV_REGISTER0_OFS 0x0078
REGDEF_BEGIN(HSV_REGISTER0)
    REGDEF_BIT(NUE2_HUE_SFT,        7)
REGDEF_END(HSV_REGISTER0)

/*
    INDATA_BURST_MODE:    [0x0, 0x3],			bits : 1_0    CHIP:520_only
    OUTRST_BURST_MODE:    [0x0, 0x3],			bits : 3_2    CHIP:520_only
    DEBUGPORTSEL     :    [0x0, 0x3],			bits : 5_4    CHIP:520_only
*/
#define NUE2_DEBUG_DESIGN_REGISTER_OFS 0x007c
REGDEF_BEGIN(NUE2_DEBUG_DESIGN_REGISTER)
    REGDEF_BIT(INDATA_BURST_MODE,        2)
    REGDEF_BIT(OUTRST_BURST_MODE,        2)
    REGDEF_BIT(DEBUGPORTSEL     ,        2)
REGDEF_END(NUE2_DEBUG_DESIGN_REGISTER)

/*
    LL_TABLE_IDX0:    [0x0, 0xff],			bits : 7_0      CHIP:520_only
    LL_TABLE_IDX1:    [0x0, 0xff],			bits : 15_8     CHIP:520_only
    LL_TABLE_IDX2:    [0x0, 0xff],			bits : 23_16    CHIP:520_only
    LL_TABLE_IDX3:    [0x0, 0xff],			bits : 31_24    CHIP:520_only
*/
#define NUE2_LL_FRAME_REGISTER0_OFS 0x0080
REGDEF_BEGIN(NUE2_LL_FRAME_REGISTER0)
    REGDEF_BIT(LL_TABLE_IDX0,        8)
    REGDEF_BIT(LL_TABLE_IDX1,        8)
    REGDEF_BIT(LL_TABLE_IDX2,        8)
    REGDEF_BIT(LL_TABLE_IDX3,        8)
REGDEF_END(NUE2_LL_FRAME_REGISTER0)

/*
    LL_TABLE_IDX4:    [0x0, 0xff],			bits : 7_0    CHIP:520_only
    LL_TABLE_IDX5:    [0x0, 0xff],			bits : 15_8   CHIP:520_only
    LL_TABLE_IDX6:    [0x0, 0xff],			bits : 23_16  CHIP:520_only
    LL_TABLE_IDX7:    [0x0, 0xff],			bits : 31_24  CHIP:520_only
*/
#define NUE2_LL_FRAME_REGISTER1_OFS 0x0084
REGDEF_BEGIN(NUE2_LL_FRAME_REGISTER1)
    REGDEF_BIT(LL_TABLE_IDX4,        8)
    REGDEF_BIT(LL_TABLE_IDX5,        8)
    REGDEF_BIT(LL_TABLE_IDX6,        8)
    REGDEF_BIT(LL_TABLE_IDX7,        8)
REGDEF_END(NUE2_LL_FRAME_REGISTER1)

/*
    LL_TABLE_IDX8 :    [0x0, 0xff],			bits : 7_0    CHIP:520_only
    LL_TABLE_IDX9 :    [0x0, 0xff],			bits : 15_8   CHIP:520_only
    LL_TABLE_IDX10:    [0x0, 0xff],			bits : 23_16  CHIP:520_only
    LL_TABLE_IDX11:    [0x0, 0xff],			bits : 31_24  CHIP:520_only
*/
#define NUE2_LL_FRAME_REGISTER2_OFS 0x0088
REGDEF_BEGIN(NUE2_LL_FRAME_REGISTER2)
    REGDEF_BIT(LL_TABLE_IDX8 ,        8)
    REGDEF_BIT(LL_TABLE_IDX9 ,        8)
    REGDEF_BIT(LL_TABLE_IDX10,        8)
    REGDEF_BIT(LL_TABLE_IDX11,        8)
REGDEF_END(NUE2_LL_FRAME_REGISTER2)

/*
    LL_TABLE_IDX12:    [0x0, 0xff],			bits : 7_0    CHIP:520_only
    LL_TABLE_IDX13:    [0x0, 0xff],			bits : 15_8   CHIP:520_only
    LL_TABLE_IDX14:    [0x0, 0xff],			bits : 23_16  CHIP:520_only
    LL_TABLE_IDX15:    [0x0, 0xff],			bits : 31_24  CHIP:520_only
*/
#define NUE2_LL_FRAME_REGISTER3_OFS 0x008c
REGDEF_BEGIN(NUE2_LL_FRAME_REGISTER3)
    REGDEF_BIT(LL_TABLE_IDX12,        8)
    REGDEF_BIT(LL_TABLE_IDX13,        8)
    REGDEF_BIT(LL_TABLE_IDX14,        8)
    REGDEF_BIT(LL_TABLE_IDX15,        8)
REGDEF_END(NUE2_LL_FRAME_REGISTER3)

/*
    LL_TERMINATE:    [0x0, 0x1],			bits : 0    CHIP:520_only
*/
#define NUE2_LL_TERMINATE_RESISTER0_OFS 0x0090
REGDEF_BEGIN(NUE2_LL_TERMINATE_RESISTER0)
    REGDEF_BIT(LL_TERMINATE,        1)
REGDEF_END(NUE2_LL_TERMINATE_RESISTER0)


/*
    DMA_DISABLE:    [0x0, 0x1],			bits : 0    CHIP:520_only
    NUE2_IDLE  :    [0x0, 0x1],			bits : 15   CHIP:520_only
*/
#define NUE2_DMA_DISABLE_REGISTER0_OFS 0x0094
REGDEF_BEGIN(NUE2_DMA_DISABLE_REGISTER0)
    REGDEF_BIT(DMA_DISABLE,        1)
    REGDEF_BIT(           ,        14)
    REGDEF_BIT(NUE2_IDLE  ,        1)
REGDEF_END(NUE2_DMA_DISABLE_REGISTER0)

typedef struct
{
    //0x0000
    T_NUE2_CONTROL_REGISTER
    NUE2_Register_0000;

    //0x0004
    T_NUE2_FUNCTION_ENABLE_REGISTER0
    NUE2_Register_0004;

    //0x0008
    T_DMA_TO_NUE2_REGISTER0
    NUE2_Register_0008;

    //0x000c
    T_DMA_TO_NUE2_REGISTER1
    NUE2_Register_000c;

    //0x0010
    T_DMA_TO_NUE2_REGISTER2
    NUE2_Register_0010;

    //0x0014
    T_DMA_TO_NUE2_REGISTER3
    NUE2_Register_0014;

    //0x0018
    T_NUE2_TO_DMA_RESULT_REGISTER0
    NUE2_Register_0018;

    //0x001c
    T_NUE2_TO_DMA_RESULT_REGISTER1
    NUE2_Register_001c;

    //0x0020
    T_NUE2_TO_DMA_RESULT_REGISTER2
    NUE2_Register_0020;

    //0x0024
    T_NUE2_INPUT_LINE_OFFSET_REGISTER0
    NUE2_Register_0024;

    //0x0028
    T_NUE2_INPUT_LINE_OFFSET_REGISTER1
    NUE2_Register_0028;

    //0x002c
    T_INPUT_LINE_OFFSET_REGISTER2
    NUE2_Register_002c;

    //0x0030
    T_OUTPUT_LINE_OFFSET_REGISTER0
    NUE2_Register_0030;

    //0x0034
    T_OUTPUT_LINE_OFFSET_REGISTER1
    NUE2_Register_0034;

    //0x0038
    T_OUTPUT_LINE_OFFSET_REGISTER2
    NUE2_Register_0038;

    //0x003c
    T_NUE2_INTERRUPT_ENABLE_REGISTER
    NUE2_Register_003c;

    //0x0040
    T_NUE2_INTERRUPT_STATUS_REGISTER
    NUE2_Register_0040;

    //0x0044
    T_NUE2_INPUT_SIZE_REGISTER0
    NUE2_Register_0044;

    //0x0048
    T_SCALE_DOWN_RATE_REGISTER0
    NUE2_Register_0048;

    //0x004c
    T_SCALE_DOWN_RATE_REGISTER1
    NUE2_Register_004c;

    //0x0050
    T_SCALE_DOWN_RATE_REGISTER2
    NUE2_Register_0050;

    //0x0054
    T_SCALE_DOWN_RATE_REGISTER3
    NUE2_Register_0054;

    //0x0058
    T_SCALING_OUTPUT_SIZE_REGISTER0
    NUE2_Register_0058;

    //0x005c
    T_MEAN_SUBTRACTION_REGISTER0
    NUE2_Register_005c;

    //0x0060
    T_MEAN_SUBTRACTION_REGISTER1
    NUE2_Register_0060;

    //0x0064
    T_PADDING_REGISTER0
    NUE2_Register_0064;

    //0x0068
    T_PADDING_REGISTER1
    NUE2_Register_0068;

    //0x006c
    T_PADDING_REGISTER2
    NUE2_Register_006c;

    //0x0070
    T_PADDING_REGISTER3
    NUE2_Register_0070;

    //0x0074
    T_PADDING_REGISTER4
    NUE2_Register_0074;

    //0x0078
    T_HSV_REGISTER0
    NUE2_Register_0078;

    //0x007c
    T_NUE2_DEBUG_DESIGN_REGISTER
    NUE2_Register_007c;

    //0x0080
    T_NUE2_LL_FRAME_REGISTER0
    NUE2_Register_0080;

    //0x0084
    T_NUE2_LL_FRAME_REGISTER1
    NUE2_Register_0084;

    //0x0088
    T_NUE2_LL_FRAME_REGISTER2
    NUE2_Register_0088;

    //0x008c
    T_NUE2_LL_FRAME_REGISTER3
    NUE2_Register_008c;

    //0x0090
    T_NUE2_LL_TERMINATE_RESISTER0
    NUE2_Register_0090;

    //0x0094
    T_NUE2_DMA_DISABLE_REGISTER0
    NUE2_Register_0094;

} NT98520_NUE2_REG_STRUCT;


//528_only
/*
    NUE2_IN_WIDTH :    [0x0, 0x7ff],			bits : 10_0
    NUE2_IN_HEIGHT:    [0x0, 0x7ff],			bits : 27_16    CHIP:528
*/
#define NUE2_INPUT_SIZE_REGISTER0_OFS_528 0x0044
REGDEF_BEGIN(NUE2_INPUT_SIZE_REGISTER0_528)
    REGDEF_BIT(NUE2_IN_WIDTH ,        11)
    REGDEF_BIT(              ,        5)
    REGDEF_BIT(NUE2_IN_HEIGHT,        12)
REGDEF_END(NUE2_INPUT_SIZE_REGISTER0_528)

/*
    NUE2_H_SCL_SIZE:    [0x0, 0x7ff],			bits : 10_0
    NUE2_V_SCL_SIZE:    [0x0, 0x7ff],			bits : 27_16    CHIP:528
*/
#define SCALING_OUTPUT_SIZE_REGISTER0_OFS_528 0x0058
REGDEF_BEGIN(SCALING_OUTPUT_SIZE_REGISTER0_528)
    REGDEF_BIT(NUE2_H_SCL_SIZE,        12)
    REGDEF_BIT(               ,        4)
    REGDEF_BIT(NUE2_V_SCL_SIZE,        12)
REGDEF_END(SCALING_OUTPUT_SIZE_REGISTER0_528)


/*
    NUE2_SUB_IN_WIDTH :    [0x0, 0x7ff],			bits : 10_0
    NUE2_SUB_IN_HEIGHT:    [0x0, 0x7ff],			bits : 27_16    CHIP:528
*/
#define MEAN_SUBTRACTION_REGISTER0_OFS_528 0x005c
REGDEF_BEGIN(MEAN_SUBTRACTION_REGISTER0_528)
    REGDEF_BIT(NUE2_SUB_IN_WIDTH ,        12)
    REGDEF_BIT(                  ,        4)
    REGDEF_BIT(NUE2_SUB_IN_HEIGHT,        12)
REGDEF_END(MEAN_SUBTRACTION_REGISTER0_528)

/*
    NUE2_SUB_COEF_0:    [0x0, 0xff],			bits : 7_0
    NUE2_SUB_COEF_1:    [0x0, 0xff],			bits : 15_8
    NUE2_SUB_COEF_2:    [0x0, 0xff],			bits : 23_16
    NUE2_SUB_DUP   :    [0x0, 0x3],			    bits : 25_24
*/
#define MEAN_SUBTRACTION_REGISTER1_OFS_528 0x0060
REGDEF_BEGIN(MEAN_SUBTRACTION_REGISTER1_528)
    REGDEF_BIT(NUE2_SUB_COEF_0,        8)
    REGDEF_BIT(NUE2_SUB_COEF_1,        8)
    REGDEF_BIT(NUE2_SUB_COEF_2,        8)
    REGDEF_BIT(NUE2_SUB_DUP   ,        2)
REGDEF_END(MEAN_SUBTRACTION_REGISTER1_528)


/*
    NUE2_PAD_CROP_X:    [0x0, 0x7ff],			bits : 10_0
    NUE2_PAD_CROP_Y:    [0x0, 0x7ff],			bits : 27_16     CHIP:528
*/
#define PADDING_REGISTER0_OFS_528 0x0064
REGDEF_BEGIN(PADDING_REGISTER0_528)
    REGDEF_BIT(NUE2_PAD_CROP_X,        12)
    REGDEF_BIT(               ,        4)
    REGDEF_BIT(NUE2_PAD_CROP_Y,        12)
REGDEF_END(PADDING_REGISTER0_528)


/*
    NUE2_PAD_CROP_WIDTH :    [0x0, 0xfff],			bits : 11_0
    NUE2_PAD_CROP_HEIGHT:    [0x0, 0xfff],			bits : 27_16     CHIP:528
*/
#define PADDING_REGISTER1_OFS_528 0x0068
REGDEF_BEGIN(PADDING_REGISTER1_528)
    REGDEF_BIT(NUE2_PAD_CROP_WIDTH ,        12)
    REGDEF_BIT(                    ,        4)
    REGDEF_BIT(NUE2_PAD_CROP_HEIGHT,        12)
REGDEF_END(PADDING_REGISTER1_528)



/*
    MEAN_SHIFT_DIR:  [0x0, 0x1],			bits : 0
    MEAN_SHIFT  :    [0x0, 0x1F],			bits : 8_4
    MEAN_SCALE  :    [0x0, 0xFFFF]          bits : 27_12
*/
#define MEAN_SHIFT_REGISTER0_OFS_528 0x007c
REGDEF_BEGIN(MEAN_SHIFT_REGISTER0_528)
    REGDEF_BIT(MEAN_SHIFT_DIR,        1)
    REGDEF_BIT(              ,        3)
    REGDEF_BIT(MEAN_SHIFT    ,        5)
    REGDEF_BIT(              ,        3)
    REGDEF_BIT(MEAN_SCALE    ,        16)
REGDEF_END(MEAN_SHIFT_REGISTER0_528)

/*
    INDATA_BURST_MODE:    [0x0, 0x3],			bits : 1_0
    OUTRST_BURST_MODE:    [0x0, 0x3],			bits : 3_2
    DEBUGPORTSEL     :    [0x0, 0x3],			bits : 5_4
	CYCLE_EN_0       :    [0x0, 0x1],			bits : 12_12
	CYCLE_EN_1       :    [0x0, 0x1],			bits : 13_13
*/
#define NUE2_DEBUG_DESIGN_REGISTER_OFS_528 0x0080
REGDEF_BEGIN(NUE2_DEBUG_DESIGN_REGISTER_528)
    REGDEF_BIT(INDATA_BURST_MODE,        2)
    REGDEF_BIT(OUTRST_BURST_MODE,        2)
    REGDEF_BIT(DEBUGPORTSEL     ,        2)
	REGDEF_BIT(                 ,        5)
	REGDEF_BIT(CHECKSUM_EN      ,        1)
	REGDEF_BIT(CYCLE_EN_0       ,        1)
	REGDEF_BIT(CYCLE_EN_1       ,        1)
REGDEF_END(NUE2_DEBUG_DESIGN_REGISTER_528)


/*
    LL_TABLE_IDX0:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX1:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX2:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX3:    [0x0, 0xff],			bits : 31_24
*/
#define NUE2_LL_FRAME_REGISTER0_OFS_528 0x0084
REGDEF_BEGIN(NUE2_LL_FRAME_REGISTER0_528)
    REGDEF_BIT(LL_TABLE_IDX0,        8)
    REGDEF_BIT(LL_TABLE_IDX1,        8)
    REGDEF_BIT(LL_TABLE_IDX2,        8)
    REGDEF_BIT(LL_TABLE_IDX3,        8)
REGDEF_END(NUE2_LL_FRAME_REGISTER0_528)


/*
    LL_TABLE_IDX4:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX5:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX6:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX7:    [0x0, 0xff],			bits : 31_24
*/
#define NUE2_LL_FRAME_REGISTER1_OFS_528 0x0088
REGDEF_BEGIN(NUE2_LL_FRAME_REGISTER1_528)
    REGDEF_BIT(LL_TABLE_IDX4,        8)
    REGDEF_BIT(LL_TABLE_IDX5,        8)
    REGDEF_BIT(LL_TABLE_IDX6,        8)
    REGDEF_BIT(LL_TABLE_IDX7,        8)
REGDEF_END(NUE2_LL_FRAME_REGISTER1_528)


/*
    LL_TABLE_IDX8 :    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX9 :    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX10:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX11:    [0x0, 0xff],			bits : 31_24
*/
#define NUE2_LL_FRAME_REGISTER2_OFS_528 0x008c
REGDEF_BEGIN(NUE2_LL_FRAME_REGISTER2_528)
    REGDEF_BIT(LL_TABLE_IDX8 ,        8)
    REGDEF_BIT(LL_TABLE_IDX9 ,        8)
    REGDEF_BIT(LL_TABLE_IDX10,        8)
    REGDEF_BIT(LL_TABLE_IDX11,        8)
REGDEF_END(NUE2_LL_FRAME_REGISTER2_528)


/*
    LL_TABLE_IDX12:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX13:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX14:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX15:    [0x0, 0xff],			bits : 31_24
*/
#define NUE2_LL_FRAME_REGISTER3_OFS_528 0x0090
REGDEF_BEGIN(NUE2_LL_FRAME_REGISTER3_528)
    REGDEF_BIT(LL_TABLE_IDX12,        8)
    REGDEF_BIT(LL_TABLE_IDX13,        8)
    REGDEF_BIT(LL_TABLE_IDX14,        8)
    REGDEF_BIT(LL_TABLE_IDX15,        8)
REGDEF_END(NUE2_LL_FRAME_REGISTER3_528)


/*
    LL_TERMINATE:    [0x0, 0x1],			bits : 0
*/
#define NUE2_LL_TERMINATE_RESISTER0_OFS_528 0x0094
REGDEF_BEGIN(NUE2_LL_TERMINATE_RESISTER0_528)
    REGDEF_BIT(LL_TERMINATE,        1)
REGDEF_END(NUE2_LL_TERMINATE_RESISTER0_528)


/*
    DMA_DISABLE:    [0x0, 0x1],			bits : 0
    NUE2_IDLE  :    [0x0, 0x1],			bits : 15
*/
#define NUE2_DMA_DISABLE_REGISTER0_OFS_528 0x0098
REGDEF_BEGIN(NUE2_DMA_DISABLE_REGISTER0_528)
    REGDEF_BIT(DMA_DISABLE,        1)
    REGDEF_BIT(           ,        14)
    REGDEF_BIT(NUE2_IDLE  ,        1)
REGDEF_END(NUE2_DMA_DISABLE_REGISTER0_528)

/*
    NUE2 LL_BASE_ADDR:    [0x0, 0x1],			bits : 31_0
*/
#define NUE2_LL_BASE_ADDRESS_REGISTER_OFS_528 0x009c
REGDEF_BEGIN(NUE2_LL_BASE_ADDRESS_REGISTER_528)
    REGDEF_BIT(LL_BASE_ADDR,       32)
REGDEF_END(NUE2_LL_BASE_ADDRESS_REGISTER_528)

/*
    NUE2 NO USE:    [0x0, 0x1],           bits : 31_0
*/
#define NUE2_NO_USE_0_REGISTER_OFS_528 0x00a0
REGDEF_BEGIN(NUE2_NO_USE_0_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_0_REGISTER_528)

/*
    NUE2 NO USE:    [0x0, 0x1],           bits : 31_0
*/
#define NUE2_NO_USE_1_REGISTER_OFS_528 0x00a4
REGDEF_BEGIN(NUE2_NO_USE_1_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_1_REGISTER_528)

/*
    NUE2 NO USE:    [0x0, 0x1],           bits : 31_0
*/
#define NUE2_NO_USE_2_REGISTER_OFS_528 0x00a8
REGDEF_BEGIN(NUE2_NO_USE_2_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_2_REGISTER_528)

/*
    NUE2 NO USE:    [0x0, 0x1],           bits : 31_0
*/
#define NUE2_NO_USE_3_REGISTER_OFS_528 0x00ac
REGDEF_BEGIN(NUE2_NO_USE_3_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_3_REGISTER_528)

/*
    NUE2 NO USE:    [0x0, 0x1],           bits : 31_0
*/
#define NUE2_NO_USE_4_REGISTER_OFS_528 0x00b0
REGDEF_BEGIN(NUE2_NO_USE_4_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_4_REGISTER_528)

/*
    NUE2 NO USE:    [0x0, 0x1],           bits : 31_0
*/
#define NUE2_NO_USE_5_REGISTER_OFS_528 0x00b4
REGDEF_BEGIN(NUE2_NO_USE_5_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_5_REGISTER_528)

/*
    NUE2 NO USE:    [0x0, 0x1],           bits : 31_0
*/
#define NUE2_NO_USE_6_REGISTER_OFS_528 0x00b8
REGDEF_BEGIN(NUE2_NO_USE_6_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_6_REGISTER_528)

/*
    NUE2 NO USE:    [0x0, 0x1],           bits : 31_0
*/
#define NUE2_NO_USE_7_REGISTER_OFS_528 0x00bc
REGDEF_BEGIN(NUE2_NO_USE_7_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_7_REGISTER_528)

/*
    NUE2 APP CYCLE COUNT:    [0x0, 0x1],	bits : 31_0
*/
#define NUE2_APP_CYCLE_COUNT_REGISTER_OFS_528 0x00c0
REGDEF_BEGIN(NUE2_APP_CYCLE_COUNT_REGISTER_528)
    REGDEF_BIT(APP_CYCLE_COUNT,       32)
REGDEF_END(NUE2_APP_CYCLE_COUNT_REGISTER_528)

/*
    NUE2 LL CYCLE COUNT:    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_LL_CYCLE_COUNT_REGISTER_OFS_528 0x00c4
REGDEF_BEGIN(NUE2_LL_CYCLE_COUNT_REGISTER_528)
    REGDEF_BIT(LL_CYCLE_COUNT,       32)
REGDEF_END(NUE2_LL_CYCLE_COUNT_REGISTER_528)

/*
    NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_8_REGISTER_OFS_528 0x00c8
REGDEF_BEGIN(NUE2_NO_USE_8_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_8_REGISTER_528)

/*
    NUE2 LLC DEBUG REGISTER 0:    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_LLC_DEBUG_REGISTER0_OFS_528 0x00cc
REGDEF_BEGIN(NUE2_LLC_DEBUG_REGISTER0_528)
    REGDEF_BIT(LLC_ERR_CMD_CNT,       32)
REGDEF_END(NUE2_LLC_DEBUG_REGISTER0_528)

/*
    NUE2 LLC DEBUG REGISTER 1:    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_LLC_DEBUG_REGISTER1_OFS_528 0x00d0
REGDEF_BEGIN(NUE2_LLC_DEBUG_REGISTER1_528)
    REGDEF_BIT(LLC_ERR_CMD_ADDR,       32)
REGDEF_END(NUE2_LLC_DEBUG_REGISTER1_528)

/*
    NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_9_REGISTER_OFS_528 0x00d4
REGDEF_BEGIN(NUE2_NO_USE_9_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_9_REGISTER_528)

/*
    NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_10_REGISTER_OFS_528 0x00d8
REGDEF_BEGIN(NUE2_NO_USE_10_REGISTER_528)
    REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_10_REGISTER_528)

/*
	NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_11_REGISTER_OFS_528 0x00dc
REGDEF_BEGIN(NUE2_NO_USE_11_REGISTER_528)
REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_11_REGISTER_528)

/*
	NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_12_REGISTER_OFS_528 0x00e0
REGDEF_BEGIN(NUE2_NO_USE_12_REGISTER_528)
REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_12_REGISTER_528)

/*
	NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_13_REGISTER_OFS_528 0x00e4
REGDEF_BEGIN(NUE2_NO_USE_13_REGISTER_528)
REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_13_REGISTER_528)

/*
	NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_14_REGISTER_OFS_528 0x00e8
REGDEF_BEGIN(NUE2_NO_USE_14_REGISTER_528)
REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_14_REGISTER_528)

/*
	NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_15_REGISTER_OFS_528 0x00ec
REGDEF_BEGIN(NUE2_NO_USE_15_REGISTER_528)
REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_15_REGISTER_528)

/*
	NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_16_REGISTER_OFS_528 0x00f0
REGDEF_BEGIN(NUE2_NO_USE_16_REGISTER_528)
REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_16_REGISTER_528)

/*
	NUE2 NO USE    [0x0, 0x1],		bits : 31_0
*/
#define NUE2_NO_USE_17_REGISTER_OFS_528 0x00f4
REGDEF_BEGIN(NUE2_NO_USE_17_REGISTER_528)
REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_17_REGISTER_528)

/*
	NUE2  OUTPUT_CHECKSUM0  [0x0, 0x1],		bits : 31_0
*/
#define NUE2_OUTPUT_CHECKSUM0_REGISTER_OFS_560 0x00f8
REGDEF_BEGIN(NUE2_OUTPUT_CHECKSUM0_REGISTER_560)
REGDEF_BIT(OUTPUT_CHECKSUM0,       32)
REGDEF_END(NUE2_OUTPUT_CHECKSUM0_REGISTER_560)

/*
	NUE2  OUTPUT_CHECKSUM1  [0x0, 0x1],		bits : 31_0
*/
#define NUE2_OUTPUT_CHECKSUM1_REGISTER_OFS_560 0x00fc
REGDEF_BEGIN(NUE2_OUTPUT_CHECKSUM1_REGISTER_560)
REGDEF_BIT(OUTPUT_CHECKSUM1,       32)
REGDEF_END(NUE2_OUTPUT_CHECKSUM1_REGISTER_560)

/*
	NUE2  OUTPUT_CHECKSUM2  [0x0, 0x1],		bits : 31_0
*/
#define NUE2_OUTPUT_CHECKSUM2_REGISTER_OFS_560 0x0100
REGDEF_BEGIN(NUE2_OUTPUT_CHECKSUM2_REGISTER_560)
REGDEF_BIT(OUTPUT_CHECKSUM2,       32)
REGDEF_END(NUE2_OUTPUT_CHECKSUM2_REGISTER_560)

/*
	NUE2  COMPARE_CHECKSUM0  [0x0, 0x1],		bits : 31_0
*/
#define NUE2_COMPARE_CHECKSUM0_REGISTER_OFS_560 0x0104
REGDEF_BEGIN(NUE2_COMPARE_CHECKSUM0_REGISTER_560)
REGDEF_BIT(COMPARE_CHECKSUM0,       32)
REGDEF_END(NUE2_COMPARE_CHECKSUM0_REGISTER_560)

/*
	NUE2  COMPARE_CHECKSUM1  [0x0, 0x1],		bits : 31_0
*/
#define NUE2_COMPARE_CHECKSUM1_REGISTER_OFS_560 0x0108
REGDEF_BEGIN(NUE2_COMPARE_CHECKSUM1_REGISTER_560)
REGDEF_BIT(COMPARE_CHECKSUM1,       32)
REGDEF_END(NUE2_COMPARE_CHECKSUM1_REGISTER_560)

/*
	NUE2  COMPARE_CHECKSUM2  [0x0, 0x1],		bits : 31_0
*/
#define NUE2_COMPARE_CHECKSUM2_REGISTER_OFS_560 0x010c
REGDEF_BEGIN(NUE2_COMPARE_CHECKSUM2_REGISTER_560)
REGDEF_BIT(COMPARE_CHECKSUM2,       32)
REGDEF_END(NUE2_COMPARE_CHECKSUM2_REGISTER_560)

/*
    NUE2 NO USE    [0x0, 0x1],      bits : 31_0
*/
#define NUE2_NO_USE_18_REGISTER_OFS_560 0x0110
REGDEF_BEGIN(NUE2_NO_USE_18_REGISTER_560)
REGDEF_BIT(NO_USE,       32)
REGDEF_END(NUE2_NO_USE_18_REGISTER_560)

/*
    NUE2 CHKSUM_MISMATCH_IDX_CNT    [0x0, 0x1],      bits : 31_0
*/
#define NUE2_CHKSUM_MISMATCH_IDX_CNT_REGISTER_OFS_560 0x0114
REGDEF_BEGIN(NUE2_CHKSUM_MISMATCH_IDX_CNT_REGISTER_560)
REGDEF_BIT(CHKSUM_MISMATCH_IDX_CNT,       32)
REGDEF_END(NUE2_CHKSUM_MISMATCH_IDX_CNT_REGISTER_560)


typedef struct
{
    //0x0000
    T_NUE2_CONTROL_REGISTER
    NUE2_Register_0000;

    //0x0004
    T_NUE2_FUNCTION_ENABLE_REGISTER0
    NUE2_Register_0004;

    //0x0008
    T_DMA_TO_NUE2_REGISTER0
    NUE2_Register_0008;

    //0x000c
    T_DMA_TO_NUE2_REGISTER1
    NUE2_Register_000c;

    //0x0010
    T_DMA_TO_NUE2_REGISTER2
    NUE2_Register_0010;

    //0x0014
    T_DMA_TO_NUE2_REGISTER3
    NUE2_Register_0014;

    //0x0018
    T_NUE2_TO_DMA_RESULT_REGISTER0
    NUE2_Register_0018;

    //0x001c
    T_NUE2_TO_DMA_RESULT_REGISTER1
    NUE2_Register_001c;

    //0x0020
    T_NUE2_TO_DMA_RESULT_REGISTER2
    NUE2_Register_0020;

    //0x0024
    T_NUE2_INPUT_LINE_OFFSET_REGISTER0
    NUE2_Register_0024;

    //0x0028
    T_NUE2_INPUT_LINE_OFFSET_REGISTER1
    NUE2_Register_0028;

    //0x002c
    T_INPUT_LINE_OFFSET_REGISTER2
    NUE2_Register_002c;

    //0x0030
    T_OUTPUT_LINE_OFFSET_REGISTER0
    NUE2_Register_0030;

    //0x0034
    T_OUTPUT_LINE_OFFSET_REGISTER1
    NUE2_Register_0034;

    //0x0038
    T_OUTPUT_LINE_OFFSET_REGISTER2
    NUE2_Register_0038;

    //0x003c
    T_NUE2_INTERRUPT_ENABLE_REGISTER
    NUE2_Register_003c;

    //0x0040
    T_NUE2_INTERRUPT_STATUS_REGISTER
    NUE2_Register_0040;

    //0x0044
    T_NUE2_INPUT_SIZE_REGISTER0_528
    NUE2_Register_0044;

    //0x0048
    T_SCALE_DOWN_RATE_REGISTER0
    NUE2_Register_0048;

    //0x004c
    T_SCALE_DOWN_RATE_REGISTER1
    NUE2_Register_004c;

    //0x0050
    T_SCALE_DOWN_RATE_REGISTER2
    NUE2_Register_0050;

    //0x0054
    T_SCALE_DOWN_RATE_REGISTER3
    NUE2_Register_0054;

    //0x0058
    T_SCALING_OUTPUT_SIZE_REGISTER0_528
    NUE2_Register_0058;

    //0x005c
    T_MEAN_SUBTRACTION_REGISTER0_528
    NUE2_Register_005c;

    //0x0060
    T_MEAN_SUBTRACTION_REGISTER1_528
    NUE2_Register_0060;

    //0x0064
    T_PADDING_REGISTER0_528
    NUE2_Register_0064;

    //0x0068
    T_PADDING_REGISTER1_528
    NUE2_Register_0068;

    //0x006c
    T_PADDING_REGISTER2
    NUE2_Register_006c;

    //0x0070
    T_PADDING_REGISTER3
    NUE2_Register_0070;

    //0x0074
    T_PADDING_REGISTER4
    NUE2_Register_0074;

    //0x0078
    T_HSV_REGISTER0
    NUE2_Register_0078;

	//0x007c
    T_MEAN_SHIFT_REGISTER0_528
    NUE2_Register_007c;

    //0x0080
    T_NUE2_DEBUG_DESIGN_REGISTER_528
    NUE2_Register_0080;

    //0x0084
    T_NUE2_LL_FRAME_REGISTER0_528
    NUE2_Register_0084;

    //0x0088
    T_NUE2_LL_FRAME_REGISTER1_528
    NUE2_Register_0088;

    //0x008c
    T_NUE2_LL_FRAME_REGISTER2_528
    NUE2_Register_008c;

    //0x0090
    T_NUE2_LL_FRAME_REGISTER3_528
    NUE2_Register_0090;

    //0x0094
    T_NUE2_LL_TERMINATE_RESISTER0_528
    NUE2_Register_0094;

    //0x0098
    T_NUE2_DMA_DISABLE_REGISTER0_528
    NUE2_Register_0098;

	//0x009c
	T_NUE2_LL_BASE_ADDRESS_REGISTER_528
	NUE2_Register_009c;

	//0x00a0
	T_NUE2_NO_USE_0_REGISTER_528
	NUE2_Register_00a0;

	//0x00a4
	T_NUE2_NO_USE_1_REGISTER_528
	NUE2_Register_00a4;

	//0x00a8
	T_NUE2_NO_USE_2_REGISTER_528
	NUE2_Register_00a8;

	//0x00ac
	T_NUE2_NO_USE_3_REGISTER_528
	NUE2_Register_00ac;

	//0x00b0
	T_NUE2_NO_USE_4_REGISTER_528
	NUE2_Register_00b0;

	//0x00b4
	T_NUE2_NO_USE_5_REGISTER_528
	NUE2_Register_00b4;

	//0x00b8
	T_NUE2_NO_USE_6_REGISTER_528
	NUE2_Register_00b8;

	//0x00bc
	T_NUE2_NO_USE_7_REGISTER_528
	NUE2_Register_00bc;

	//0x00c0
	T_NUE2_APP_CYCLE_COUNT_REGISTER_528
	NUE2_Register_00c0;

	//0x00c4
	T_NUE2_LL_CYCLE_COUNT_REGISTER_528
	NUE2_Register_00c4;

	//0x00c8
	T_NUE2_NO_USE_8_REGISTER_528
	NUE2_Register_00c8;

	//0x00cc
	T_NUE2_LLC_DEBUG_REGISTER0_528
	NUE2_Register_00cc;

	//0x00d0
	T_NUE2_LLC_DEBUG_REGISTER1_528
	NUE2_Register_00d0;

	//0x00d4
	T_NUE2_NO_USE_9_REGISTER_528
	NUE2_Register_00d4;

	//0x00d8
	T_NUE2_NO_USE_10_REGISTER_528
	NUE2_Register_00d8;

	//0x00dc
	T_NUE2_NO_USE_11_REGISTER_528
	NUE2_Register_00dc;

	//0x00e0
	T_NUE2_NO_USE_12_REGISTER_528
	NUE2_Register_00e0;

	//0x00e4
	T_NUE2_NO_USE_13_REGISTER_528
	NUE2_Register_00e4;

	//0x00e8
	T_NUE2_NO_USE_14_REGISTER_528
	NUE2_Register_00e8;

	//0x00ec
	T_NUE2_NO_USE_15_REGISTER_528
	NUE2_Register_00ec;

	//0x00f0
	T_NUE2_NO_USE_16_REGISTER_528
	NUE2_Register_00f0;

	//0x00f4
	T_NUE2_NO_USE_17_REGISTER_528
	NUE2_Register_00f4;

	//0x00f8
	T_NUE2_OUTPUT_CHECKSUM0_REGISTER_560
	NUE2_Register_00f8;

	//0x00fc
	T_NUE2_OUTPUT_CHECKSUM1_REGISTER_560
	NUE2_Register_00fc;

	//0x0100
	T_NUE2_OUTPUT_CHECKSUM2_REGISTER_560
	NUE2_Register_0100;

	//0x0104
	T_NUE2_COMPARE_CHECKSUM0_REGISTER_560
	NUE2_Register_0104;

	//0x0108
	T_NUE2_COMPARE_CHECKSUM1_REGISTER_560
	NUE2_Register_0108;

	//0x010c
	T_NUE2_COMPARE_CHECKSUM2_REGISTER_560
	NUE2_Register_010c;

	//0x0110
	T_NUE2_NO_USE_18_REGISTER_560
	NUE2_Register_0110;

	//0x0114
	T_NUE2_CHKSUM_MISMATCH_IDX_CNT_REGISTER_560
	NUE2_Register_0114;

 
} NT98528_NUE2_REG_STRUCT;
//528_only end






#endif
