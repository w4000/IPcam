/*
    PLL configuration module internal header

    PLL configuration module internal header file

    @file       pll_int.h
    @ingroup    mIDrvSys_CG
    @note       Nothing

    Copyright   Novatek Microelectronics Corp. 2018.  All rights reserved.
*/

#ifndef _PLL_INT_REG_H
#define _PLL_INT_REG_H

#include <rcw_macro.h>
#include <kwrap/nvt_type.h>
#include <io_address.h>

#ifndef _FPGA_EMULATION_
#ifdef _NVT_FPGA_
#define _FPGA_EMULATION_ 1
#else
#define _FPGA_EMULATION_ 0
#endif
#endif

#ifndef _EMULATION_
#ifdef _NVT_EMULATION_
#define _EMULATION_ 1
#else
#define _EMULATION_ 0
#endif
#endif

//
// Clock Rate bit definition
//
#define PLL_CLKSEL_CPU_MASK             (0x03 << PLL_CLKSEL_CPU)
#define PLL_CLKSEL_APB_MASK             (0x03 << PLL_CLKSEL_APB)
#define PLL_CLKSEL_DMA_ARBT_MASK		(0x01 << PLL_CLKSEL_DMA_ARBT)
#define PLL_CLKSEL_DDRPHY_MASK          (0x01 << PLL_CLKSEL_DDRPHY)

#define PLL_CLKSEL_CNN_MASK             (0x03 << (PLL_CLKSEL_CNN - PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_IVE_MASK             (0x03 << (PLL_CLKSEL_IVE - PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_IPE_MASK             (0x03 << (PLL_CLKSEL_IPE - PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_DIS_MASK             (0x03 << (PLL_CLKSEL_DIS - PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_IME_MASK             (0x03 << (PLL_CLKSEL_IME - PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_CNN2_MASK            (0x03 << (PLL_CLKSEL_CNN2- PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_SDE_MASK             (0x03 << (PLL_CLKSEL_SDE - PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_MDBC_MASK            (0x03 << (PLL_CLKSEL_MDBC- PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_VPE_MASK             (0x03 << (PLL_CLKSEL_VPE - PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_ISE_MASK             (0x03 << (PLL_CLKSEL_ISE - PLL_CLKSEL_R1_OFFSET))
#define PLL_CLKSEL_DCE_MASK             (0x03 << (PLL_CLKSEL_DCE - PLL_CLKSEL_R1_OFFSET))

#define PLL_CLKSEL_IFE_MASK             (0x03 << (PLL_CLKSEL_IFE - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_IFE2_MASK            (0x03 << (PLL_CLKSEL_IFE2 - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE_MCLKSRC_MASK     (0x03 << (PLL_CLKSEL_SIE_MCLKSRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE_MCLK2SRC_MASK    (0x03 << (PLL_CLKSEL_SIE_MCLK2SRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE_MCLK3SRC_MASK    (0x03 << (PLL_CLKSEL_SIE_MCLK3SRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE_IO_PXCLKSRC_MASK (0x01 << (PLL_CLKSEL_SIE_IO_PXCLKSRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE2_IO_PXCLKSRC_MASK (0x01 << (PLL_CLKSEL_SIE2_IO_PXCLKSRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE_PXCLKSRC_MASK    (0x01 << (PLL_CLKSEL_SIE_PXCLKSRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE2_PXCLKSRC_MASK   (0x01 << (PLL_CLKSEL_SIE2_PXCLKSRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE3_PXCLKSRC_MASK   (0x01 << (PLL_CLKSEL_SIE3_PXCLKSRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE_MCLKINV_MASK     (0x01 << (PLL_CLKSEL_SIE_MCLKINV - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE4_IO_PXCLKSRC_MASK (0x01 << (PLL_CLKSEL_SIE4_IO_PXCLKSRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE4_PXCLKSRC_MASK   (0x01 << (PLL_CLKSEL_SIE4_PXCLKSRC - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_TGE_MASK             (0x01 << (PLL_CLKSEL_TGE - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_TGE2_MASK            (0x01 << (PLL_CLKSEL_TGE2 - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE_MCLK2INV_MASK    (0x01 << (PLL_CLKSEL_SIE_MCLK2INV - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_SIE_MCLK3INV_MASK    (0x01 << (PLL_CLKSEL_SIE_MCLK3INV - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_IFE_SRAM_MASK        (0x01 << (PLL_CLKSEL_IFE_SRAM - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_CNN_SRAM_MASK        (0x03 << (PLL_CLKSEL_CNN_SRAM - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_NUE_MASK             (0x03 << (PLL_CLKSEL_NUE - PLL_CLKSEL_R2_OFFSET))
#define PLL_CLKSEL_NUE2_MASK            (0x03 << (PLL_CLKSEL_NUE2 - PLL_CLKSEL_R2_OFFSET))

#define PLL_CLKSEL_JPEG_MASK            (0x03 << (PLL_CLKSEL_JPEG - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_VENC_MASK            (0x03 << (PLL_CLKSEL_VENC - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_GRAPHIC_MASK         (0x03 << (PLL_CLKSEL_GRAPHIC - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_AFFINE_MASK          (0x03 << (PLL_CLKSEL_AFFINE - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_GRAPHIC2_MASK        (0x03 << (PLL_CLKSEL_GRAPHIC2 - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_UVCP_MASK		(0x03 << (PLL_CLKSEL_UVCP - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_SIE3_CLKSRC_MASK     (0x07 << (PLL_CLKSEL_SIE3_CLKSRC - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_CRYPTO_MASK          (0x03 << (PLL_CLKSEL_CRYPTO - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_RSA_MASK             (0x03 << (PLL_CLKSEL_RSA - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_SIE_CLKSRC_MASK      (0x07 << (PLL_CLKSEL_SIE_CLKSRC - PLL_CLKSEL_R3_OFFSET))
#define PLL_CLKSEL_SIE2_CLKSRC_MASK     (0x07 << (PLL_CLKSEL_SIE2_CLKSRC - PLL_CLKSEL_R3_OFFSET))

#define PLL_CLKSEL_SDIO_MASK            (0x03 << (PLL_CLKSEL_SDIO - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_SDIO2_MASK           (0x03 << (PLL_CLKSEL_SDIO2 - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_MIPI_LVDS_MASK       (0x01 << (PLL_CLKSEL_MIPI_LVDS - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_LVDS_CLKPHASE_MASK   (0x01 << (PLL_CLKSEL_LVDS_CLKPHASE - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_LVDS2_CLKPHASE_MASK  (0x01 << (PLL_CLKSEL_LVDS2_CLKPHASE - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_MIPI_LVDS2_MASK      (0x01 << (PLL_CLKSEL_MIPI_LVDS2 - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_IDE_CLKSRC_MASK      (0x07 << (PLL_CLKSEL_IDE_CLKSRC - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_DSI_LPSRC_MASK       (0x01 << (PLL_CLKSEL_DSI_LPSRC - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_ADO_MCLKSEL_MASK     (0x01 << (PLL_CLKSEL_ADO_MCLKSEL - PLL_CLKSEL_R4_OFFSET))
#define PLL_CLKSEL_ETH_MASK             (0x01 << (PLL_CLKSEL_ETH - PLL_CLKSEL_R4_OFFSET))

#define PLL_CLKSEL_SDIO3_MASK           (0x03 << (PLL_CLKSEL_SDIO3 - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_TSE_MASK             (0x03 << (PLL_CLKSEL_TSE - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_SP_MASK              (0x03 << (PLL_CLKSEL_SP - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_SP2_MASK             (0x03 << (PLL_CLKSEL_SP2 - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_ETH_REFCLK_INV_MASK  (0x01 << (PLL_CLKSEL_ETH_REFCLK_INV - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_HASH_MASK            (0x03 << (PLL_CLKSEL_HASH - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_TRNG_MASK            (0x01 << (PLL_CLKSEL_TRNG - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_TRNGRO_CLKSRC_MASK   (0x01 << (PLL_CLKSEL_TRNGRO_CLKSRC- PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_DRTC_MASK            (0x01 << (PLL_CLKSEL_DRTC - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_REMOTE_MASK          (0x03 << (PLL_CLKSEL_REMOTE - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_ADC_PD_MASK          (0x01 << (PLL_CLKSEL_ADC_PD - PLL_CLKSEL_R5_OFFSET))
#define PLL_CLKSEL_ETHPHY_CLKSRC_MASK   (0x03 << (PLL_CLKSEL_ETHPHY_CLKSRC - PLL_CLKSEL_R5_OFFSET))

#define PLL_CLKSEL_CSILPCLK_D0_MASK		(0x03 << (PLL_CLKSEL_CSILPCLK_D0 - PLL_CLKSEL_R6_OFFSET))
#define PLL_CLKSEL_CSILPCLK_D1_MASK		(0x03 << (PLL_CLKSEL_CSILPCLK_D1 - PLL_CLKSEL_R6_OFFSET))
#define PLL_CLKSEL_CSILPCLK_D2_MASK		(0x03 << (PLL_CLKSEL_CSILPCLK_D2 - PLL_CLKSEL_R6_OFFSET))
#define PLL_CLKSEL_CSILPCLK_D3_MASK		(0x03 << (PLL_CLKSEL_CSILPCLK_D3 - PLL_CLKSEL_R6_OFFSET))

#define PLL_CLKSEL_SIE4_CLKSRC_MASK     (0x07 << (PLL_CLKSEL_SIE4_CLKSRC - PLL_CLKSEL_R7_OFFSET))
#define PLL_CLKSEL_SIE5_CLKSRC_MASK     (0x07 << (PLL_CLKSEL_SIE5_CLKSRC - PLL_CLKSEL_R7_OFFSET))
#define PLL_CLKSEL_SIE4_CLKDIV_MASK     (0xFF << (PLL_CLKSEL_SIE4_CLKDIV - PLL_CLKSEL_R7_OFFSET))
#define PLL_CLKSEL_SIE5_CLKDIV_MASK     (0xFF << (PLL_CLKSEL_SIE5_CLKDIV - PLL_CLKSEL_R7_OFFSET))

#define PLL_CLKSEL_SIE_MCLKDIV_MASK     (0xFF << (PLL_CLKSEL_SIE_MCLKDIV - PLL_CLKSEL_R8_OFFSET))
#define PLL_CLKSEL_SIE_MCLK2DIV_MASK    (0xFF << (PLL_CLKSEL_SIE_MCLK2DIV - PLL_CLKSEL_R8_OFFSET))
#define PLL_CLKSEL_SIE_CLKDIV_MASK      (0xFF << (PLL_CLKSEL_SIE_CLKDIV - PLL_CLKSEL_R8_OFFSET))
#define PLL_CLKSEL_SIE2_CLKDIV_MASK     (0xFF << (PLL_CLKSEL_SIE2_CLKDIV - PLL_CLKSEL_R8_OFFSET))

#define PLL_CLKSEL_IDE_CLKDIV_MASK      (0xFF << (PLL_CLKSEL_IDE_CLKDIV - PLL_CLKSEL_R9_OFFSET))
#define PLL_CLKSEL_IDE_OUTIF_CLKDIV_MASK (0xFF << (PLL_CLKSEL_IDE_OUTIF_CLKDIV - PLL_CLKSEL_R9_OFFSET))
#define PLL_CLKSEL_SIE_MCLK3DIV_MASK    (0xFF << (PLL_CLKSEL_SIE_MCLK3DIV - PLL_CLKSEL_R9_OFFSET))
#define PLL_CLKSEL_TRNG_CLKDIV_MASK     (0xFF << (PLL_CLKSEL_TRNG_CLKDIV - PLL_CLKSEL_R9_OFFSET))

#define PLL_CLKSEL_SP_CLKDIV_MASK       (0xFF << (PLL_CLKSEL_SP_CLKDIV - PLL_CLKSEL_R10_OFFSET))
#define PLL_CLKSEL_SIE3_CLKDIV_MASK     (0xFF << (PLL_CLKSEL_SIE3_CLKDIV - PLL_CLKSEL_R10_OFFSET))
#define PLL_CLKSEL_ADO_CLKDIV_MASK      (0xFF << (PLL_CLKSEL_ADO_CLKDIV - PLL_CLKSEL_R10_OFFSET))
#define PLL_CLKSEL_ADO_OSR_CLKDIV_MASK  (0xFF << (PLL_CLKSEL_ADO_OSR_CLKDIV - PLL_CLKSEL_R10_OFFSET))

#define PLL_CLKSEL_SDIO_CLKDIV_MASK     (0x7FF<< (PLL_CLKSEL_SDIO_CLKDIV - PLL_CLKSEL_R11_OFFSET))
#define PLL_CLKSEL_SDIO2_CLKDIV_MASK    (0x7FF<< (PLL_CLKSEL_SDIO2_CLKDIV - PLL_CLKSEL_R11_OFFSET))

#define PLL_CLKSEL_SDIO3_CLKDIV_MASK    (0x7FF<< (PLL_CLKSEL_SDIO3_CLKDIV - PLL_CLKSEL_R12_OFFSET))
#define PLL_CLKSEL_NAND_CLKDIV_MASK     (0x3F << (PLL_CLKSEL_NAND_CLKDIV - PLL_CLKSEL_R12_OFFSET))
#define PLL_CLKSEL_SP2_CLKDIV_MASK      (0xFF << (PLL_CLKSEL_SP2_CLKDIV - PLL_CLKSEL_R12_OFFSET))

#define PLL_CLKSEL_SPI_CLKDIV_MASK      (0x7FF << (PLL_CLKSEL_SPI_CLKDIV - PLL_CLKSEL_R13_OFFSET))
#define PLL_CLKSEL_SPI2_CLKDIV_MASK     (0x7FF << (PLL_CLKSEL_SPI2_CLKDIV - PLL_CLKSEL_R13_OFFSET))

#define PLL_CLKSEL_SPI3_CLKDIV_MASK     (0x7FF << (PLL_CLKSEL_SPI3_CLKDIV - PLL_CLKSEL_R14_OFFSET))
#define PLL_CLKSEL_SPI4_CLKDIV_MASK     (0x7FF << (PLL_CLKSEL_SPI4_CLKDIV - PLL_CLKSEL_R14_OFFSET))

#define PLL_CLKSEL_UART2_CLKDIV_MASK    (0xFF << (PLL_CLKSEL_UART2_CLKDIV - PLL_CLKSEL_R15_OFFSET))
#define PLL_CLKSEL_UART3_CLKDIV_MASK    (0xFF << (PLL_CLKSEL_UART3_CLKDIV - PLL_CLKSEL_R15_OFFSET))
#define PLL_CLKSEL_UART4_CLKDIV_MASK    (0xFF << (PLL_CLKSEL_UART4_CLKDIV - PLL_CLKSEL_R15_OFFSET))
#define PLL_CLKSEL_UART5_CLKDIV_MASK    (0xFF << (PLL_CLKSEL_UART5_CLKDIV - PLL_CLKSEL_R15_OFFSET))

#define PLL_CLKSEL_TRNG_RO_CLKDIV_MASK  (0xFF << (PLL_CLKSEL_TRNG_RO_CLKDIV - PLL_CLKSEL_R20_OFFSET))
#define PLL_CLKSEL_TRNG_RO_DELAY_MASK   (0xF  << (PLL_CLKSEL_TRNG_RO_DELAY - PLL_CLKSEL_R20_OFFSET))
#define PLL_CLKSEL_UART6_CLKDIV_MASK    (0xFF << (PLL_CLKSEL_UART6_CLKDIV - PLL_CLKSEL_R20_OFFSET))
#define PLL_CLKSEL_ADO_MCLKDIV_MASK     (0xFF << (PLL_CLKSEL_ADO_MCLKDIV - PLL_CLKSEL_R20_OFFSET))

#define PLL_CLKSEL_SPI5_CLKDIV_MASK     (0x7FF << (PLL_CLKSEL_SPI5_CLKDIV - PLL_CLKSEL_R21_OFFSET))


//
//  PLL Register access definition
//
#define     PLL_SETREG(ofs, value)       OUTW((IOADDR_CG_REG_BASE+(ofs)), (value))
#define     PLL_GETREG(ofs)             INW(IOADDR_CG_REG_BASE+(ofs))

#define PLL_FPGA_480SRC                 (24000000)
#define PLL_FPGA_PLL2RC                 (24000000)
#define PLL_FPGA_PLL3SRC                (20000000)
#define PLL_FPGA_PLL7SRC                (12288000)
#define PLL_FPGA_PLL12SRC               (25000000)

typedef struct {
	UINT32          source_enabled;
	UINT32          source_module;
	UINT32          check_item;
	CHAR           *module_name;
} PLLCLKCHECK, *PPLLCLKCHECK;


typedef struct {
	UINT32          clk_src;
	CHAR           *clk_name;
} PLLCLKINFO, *PPLLCLKINFO;

#endif

