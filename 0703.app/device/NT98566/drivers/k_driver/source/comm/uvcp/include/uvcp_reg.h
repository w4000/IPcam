/*
    Register offset and bit definition for UVCP module

    Register offset and bit definition for UVCP module.

    @file       uvcp_reg.h
    @ingroup    mIDrvIO_UVCP
    @note       Nothing

    Copyright   Novatek Microelectronics Corp. 2020.  All rights reserved.
*/

#ifndef __UVCP_REG_H__
#define __UVCP_REG_H__

#include "mach/rcw_macro.h"
#include "kwrap/type.h"


/*
    @addtogroup mIDrvIO_UVCP
*/
//@{

// UVCP Operation Register
REGDEF_OFFSET(UVCP_OP_REG, 0x00)
REGDEF_BEGIN(UVCP_OP_REG)
REGDEF_BIT(START,  1)
REGDEF_BIT(, 31)
REGDEF_END(UVCP_OP_REG)

// UVCP Control Register 0
REGDEF_OFFSET(UVCP_CTRL0_REG, 0x04)
REGDEF_BEGIN(UVCP_CTRL0_REG)
REGDEF_BIT(HEADER_LEN_CTRL,  1)
REGDEF_BIT(, 15)
REGDEF_BIT(PAYLOAD_SLICE_SIZE, 16)
REGDEF_END(UVCP_CTRL0_REG)

// UVCP Control Register 1
REGDEF_OFFSET(UVCP_CTRL1_REG, 0x08)
REGDEF_BEGIN(UVCP_CTRL1_REG)
REGDEF_BIT(SCR_INCRE31_0,  16)
REGDEF_BIT(SCR_INCRE42_32, 8)
REGDEF_BIT(SCR_REPEAT, 4)
REGDEF_BIT(, 4)
REGDEF_END(UVCP_CTRL1_REG)

// UVCP Control Register 2
REGDEF_OFFSET(UVCP_CTRL2_REG, 0x10)
REGDEF_BEGIN(UVCP_CTRL2_REG)
REGDEF_BIT(HEADER_LEN_VALUE,  8)
REGDEF_BIT(FID_VAL, 1)
REGDEF_BIT(EOF_SET, 1)
REGDEF_BIT(PTS_VAL, 1)
REGDEF_BIT(SCR_VAL, 1)
REGDEF_BIT(RES_VAL, 1)
REGDEF_BIT(STI_VAL, 1)
REGDEF_BIT(ERR_VAL, 1)
REGDEF_BIT(EOH_VAL, 1)
REGDEF_BIT(, 16)
REGDEF_END(UVCP_CTRL2_REG)

// UVCP Control Register 3
REGDEF_OFFSET(UVCP_CTRL3_REG, 0x14)
REGDEF_BEGIN(UVCP_CTRL3_REG)
REGDEF_BIT(PTS_VAL,  32)
REGDEF_END(UVCP_CTRL3_REG)

// UVCP Control Register 4
REGDEF_OFFSET(UVCP_CTRL4_REG, 0x18)
REGDEF_BEGIN(UVCP_CTRL4_REG)
REGDEF_BIT(SCR31_0_START_VAL,  32)
REGDEF_END(UVCP_CTRL4_REG)

// UVCP Control Register 5
REGDEF_OFFSET(UVCP_CTRL5_REG, 0x1C)
REGDEF_BEGIN(UVCP_CTRL5_REG)
REGDEF_BIT(SCR42_32_START_VAL,  11)
REGDEF_BIT(SCR47_43_VAL,  5)
REGDEF_BIT(,  16)
REGDEF_END(UVCP_CTRL5_REG)

// UVCP DMA Input Address Register
REGDEF_OFFSET(UVCP_INADDR_REG, 0x40)
REGDEF_BEGIN(UVCP_INADDR_REG)
REGDEF_BIT(IN_ADDR,  32)
REGDEF_END(UVCP_INADDR_REG)

// UVCP DMA Input Size Register
REGDEF_OFFSET(UVCP_INSIZE_REG, 0x44)
REGDEF_BEGIN(UVCP_INSIZE_REG)
REGDEF_BIT(IN_SIZE,  24)
REGDEF_BIT(,  8)
REGDEF_END(UVCP_INSIZE_REG)

// UVCP DMA Output Address Register
REGDEF_OFFSET(UVCP_OUTADDR_REG, 0x50)
REGDEF_BEGIN(UVCP_OUTADDR_REG)
REGDEF_BIT(OUT_ADDR,  32)
REGDEF_END(UVCP_OUTADDR_REG)

// UVCP DMA Output Size Register
REGDEF_OFFSET(UVCP_OUTSIZE_REG, 0x54)
REGDEF_BEGIN(UVCP_OUTSIZE_REG)
REGDEF_BIT(OUT_SIZE,  25)
REGDEF_BIT(,  7)
REGDEF_END(UVCP_OUTSIZE_REG)

// UVCP Breakpoint Size Register
REGDEF_OFFSET(UVCP_BREAKSIZE_REG, 0x58)
REGDEF_BEGIN(UVCP_BREAKSIZE_REG)
REGDEF_BIT(BREAK_SIZE,  25)
REGDEF_BIT(,  7)
REGDEF_END(UVCP_BREAKSIZE_REG)

// UVCP Interrupt Enable Register
REGDEF_OFFSET(UVCP_INTEN_REG, 0x60)
REGDEF_BEGIN(UVCP_INTEN_REG)
REGDEF_BIT(COMPLETE,  1)
REGDEF_BIT(BREAKPOINT,  1)
REGDEF_BIT(,  30)
REGDEF_END(UVCP_INTEN_REG)

// UVCP Interrupt Status Register
REGDEF_OFFSET(UVCP_INTSTS_REG, 0x64)
REGDEF_BEGIN(UVCP_INTSTS_REG)
REGDEF_BIT(COMPLETE,  1)
REGDEF_BIT(BREAKPOINT,  1)
REGDEF_BIT(,  30)
REGDEF_END(UVCP_INTSTS_REG)


//@}
#endif

