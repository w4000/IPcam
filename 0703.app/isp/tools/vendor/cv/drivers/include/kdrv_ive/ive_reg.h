#ifndef _IVE_REG_H_
#define _IVE_REG_H_

#if defined(__FREERTOS)
#include "rcw_macro.h"
#else
#include "mach/rcw_macro.h"
#include "kwrap/type.h"
#endif

#if 0
#ifdef __KERNEL__
extern UINT32 _IVE_REG_BASE_ADDR;
#define IVE_REG_ADDR(ofs)        (_IVE_REG_BASE_ADDR+(ofs))
#define IVE_SETREG(ofs, value)   iowrite32(value,(void *)(_IVE_REG_BASE_ADDR + ofs))
#define IVE_GETREG(ofs)          ioread32((void *)(_IVE_REG_BASE_ADDR + ofs))
#else
#define _IVE_REG_BASE_ADDR       IOADDR_IVE_REG_BASE
#define IVE_REG_ADDR(ofs)        (_IVE_REG_BASE_ADDR+(ofs))
#define IVE_SETREG(ofs, value)   OUTW((_IVE_REG_BASE_ADDR + ofs), value)
#define IVE_GETREG(ofs)          INW(_IVE_REG_BASE_ADDR + ofs)
#endif
#endif

/*
    IVE_RST  :    [0x0, 0x1],           bits : 0
    IVE_START:    [0x0, 0x1],           bits : 1
*/
#define ENGINE_CONTROL_REGISTER_OFS 0x0000
REGDEF_BEGIN(ENGINE_CONTROL_REGISTER)
REGDEF_BIT(IVE_RST,        1)
REGDEF_BIT(IVE_START,        1)
REGDEF_BIT(        ,        26)
REGDEF_BIT(LL_FIRE,        1)
REGDEF_END(ENGINE_CONTROL_REGISTER)


/*
    INTE_FRM_END :    [0x0, 0x1],           bits : 0
*/
#define IVE_INTERRUPT_ENABLE_REGISTER_OFS 0x0004
REGDEF_BEGIN(IVE_INTERRUPT_ENABLE_REGISTER)
REGDEF_BIT(INTE_FRM_END,        1)
REGDEF_BIT(                ,        7)
REGDEF_BIT(INTE_LLEND      ,        1)
REGDEF_BIT(INTE_LLERROR    ,        1)

REGDEF_END(IVE_INTERRUPT_ENABLE_REGISTER)


/*
    INT_FRM_END:    [0x0, 0x1],         bits : 0
*/
#define IVE_INTERRUPT_STATUS_REGISTER_OFS 0x0008
REGDEF_BEGIN(IVE_INTERRUPT_STATUS_REGISTER)
REGDEF_BIT(INT_FRM_END     ,        1)
REGDEF_BIT(                ,        7)
REGDEF_BIT(INT_LLEND       ,        1)
REGDEF_BIT(INT_LLERROR     ,        1)
REGDEF_END(IVE_INTERRUPT_STATUS_REGISTER)


/*
    Reserved:    [0x0, 0xffffffff],         bits : 31_0
*/
#define IVE_TERMINATE_REGISTER_OFS 0x000c
REGDEF_BEGIN(IVE_TERMINATE_REGISTER)
REGDEF_BIT(LL_TERMINATE,        1)
REGDEF_END(IVE_TERMINATE_REGISTER)


/*
    GEN_FILT_EN      :    [0x0, 0x1],           bits : 0
    MEDN_FILT_EN     :    [0x0, 0x1],           bits : 1
    MEDN_FILT_MODE   :    [0x0, 0x3],           bits : 3_2
    EDGE_FILT_EN     :    [0x0, 0x1],           bits : 4
    EDGE_MODE        :    [0x0, 0x1],           bits : 5
    EDGE_SHIFT_BIT   :    [0x0, 0xf],           bits : 9_6
    NON_MAX_SUP_EN   :    [0x0, 0x1],           bits : 10
    MORPH_IN_SEL     :    [0x0, 0x3],           bits : 12_11
    THRES_LUT_EN     :    [0x0, 0x1],           bits : 13
    MORPH_FILT_EN    :    [0x0, 0x1],           bits : 14
    MORPH_OP         :    [0x0, 0x1],           bits : 15
    INTEGRAL_EN      :    [0x0, 0x1],           bits : 16
    OUT_DATA_SEL     :    [0x0, 0x7],           bits : 19_17
    IRV_EN           :    [0x0, 0x1],           bits : 20
    IRV_HIST_MODE_SEL:    [0x0, 0x1],           bits : 21
    IRV_INVALID_VAL  :    [0x0, 0x1],           bits : 22
    ANGLE_SLP_FACT   :    [0x0, 0xff],          bits : 31_24
*/
#define FUNCTION_ENABLE_REGISTER_OFS 0x0010
REGDEF_BEGIN(FUNCTION_ENABLE_REGISTER)
REGDEF_BIT(GEN_FILT_EN,        1)
REGDEF_BIT(MEDN_FILT_EN,        1)
REGDEF_BIT(MEDN_FILT_MODE,        2)
REGDEF_BIT(EDGE_FILT_EN,        1)
REGDEF_BIT(EDGE_MODE,        1)
REGDEF_BIT(EDGE_SHIFT_BIT,        4)
REGDEF_BIT(NON_MAX_SUP_EN,        1)
REGDEF_BIT(MORPH_IN_SEL,        2)
REGDEF_BIT(THRES_LUT_EN,        1)
REGDEF_BIT(MORPH_FILT_EN,        1)
REGDEF_BIT(MORPH_OP,        1)
REGDEF_BIT(INTEGRAL_EN,        1)
REGDEF_BIT(OUT_DATA_SEL,        3)
REGDEF_BIT(IRV_EN,        1)
REGDEF_BIT(IRV_HIST_MODE_SEL,        1)
REGDEF_BIT(IRV_INVALID_VAL,        1)
REGDEF_BIT(,        1)
REGDEF_BIT(ANGLE_SLP_FACT,        8)
REGDEF_END(FUNCTION_ENABLE_REGISTER)


/*
    DRAM_IN_SADDR:    [0x0, 0x1fffffff],            bits : 31_2
*/
#define IVE_DMA_INPUT_REGISTER_OFS 0x0014
REGDEF_BEGIN(IVE_DMA_INPUT_REGISTER)
REGDEF_BIT(,        2)
REGDEF_BIT(DRAM_IN_SADDR,        30)
REGDEF_END(IVE_DMA_INPUT_REGISTER)


/*
    DRAM_IN_LOFST:    [0x0, 0x3ffff],           bits : 19_2
*/
#define IVE_DMA_INPUT_LINE_OFFSET_REGISTER_OFS 0x0018
REGDEF_BEGIN(IVE_DMA_INPUT_LINE_OFFSET_REGISTER)
REGDEF_BIT(,        2)
REGDEF_BIT(DRAM_IN_LOFST,        18)
REGDEF_END(IVE_DMA_INPUT_LINE_OFFSET_REGISTER)


/*
    DRAM_OUT_SADDR:    [0x0, 0x1fffffff],           bits : 31_2
*/
#define IVE_DMA_OUTPUT_RESULT_REGISTER_OFS 0x001c
REGDEF_BEGIN(IVE_DMA_OUTPUT_RESULT_REGISTER)
REGDEF_BIT(,        2)
REGDEF_BIT(DRAM_OUT_SADDR,        30)
REGDEF_END(IVE_DMA_OUTPUT_RESULT_REGISTER)


/*
    DRAM_OUT_LOFST:    [0x0, 0x3ffff],          bits : 19_2
*/
#define IVE_DMA_OUTPUT_LINE_OFFSET_REGISTER_OFS 0x0020
REGDEF_BEGIN(IVE_DMA_OUTPUT_LINE_OFFSET_REGISTER)
REGDEF_BIT(,        2)
REGDEF_BIT(DRAM_OUT_LOFST,        18)
REGDEF_END(IVE_DMA_OUTPUT_LINE_OFFSET_REGISTER)


/*
    IMG_WIDTH :    [0x0, 0x3fff],           bits : 13_0
    IMG_HEIGHT:    [0x0, 0x1fff],           bits : 28_16
*/
#define INPUT_IMAGE_SIZE_REGISTER_OFS 0x0024
REGDEF_BEGIN(INPUT_IMAGE_SIZE_REGISTER)
REGDEF_BIT(IMG_WIDTH,        14)
REGDEF_BIT(,        2)
REGDEF_BIT(IMG_HEIGHT,        13)
REGDEF_END(INPUT_IMAGE_SIZE_REGISTER)


/*
    GEN_FILT_COEFF0:    [0x0, 0xf],         bits : 3_0
    GEN_FILT_COEFF1:    [0x0, 0xf],         bits : 7_4
    GEN_FILT_COEFF2:    [0x0, 0xf],         bits : 11_8
    GEN_FILT_COEFF3:    [0x0, 0xf],         bits : 15_12
    GEN_FILT_COEFF4:    [0x0, 0xf],         bits : 19_16
    GEN_FILT_COEFF5:    [0x0, 0xf],         bits : 23_20
    GEN_FILT_COEFF6:    [0x0, 0xf],         bits : 27_24
    GEN_FILT_COEFF7:    [0x0, 0xf],         bits : 31_28
*/
#define GENERAL_FILTER_REGISTER_0_OFS 0x0028
REGDEF_BEGIN(GENERAL_FILTER_REGISTER_0)
REGDEF_BIT(GEN_FILT_COEFF0,        4)
REGDEF_BIT(GEN_FILT_COEFF1,        4)
REGDEF_BIT(GEN_FILT_COEFF2,        4)
REGDEF_BIT(GEN_FILT_COEFF3,        4)
REGDEF_BIT(GEN_FILT_COEFF4,        4)
REGDEF_BIT(GEN_FILT_COEFF5,        4)
REGDEF_BIT(GEN_FILT_COEFF6,        4)
REGDEF_BIT(GEN_FILT_COEFF7,        4)
REGDEF_END(GENERAL_FILTER_REGISTER_0)


/*
    GEN_FILT_COEFF8:    [0x0, 0xf],         bits : 3_0
    GEN_FILT_COEFF9:    [0x0, 0xf],         bits : 7_4
*/
#define GENERAL_FILTER_REGISTER_1_OFS 0x002c
REGDEF_BEGIN(GENERAL_FILTER_REGISTER_1)
REGDEF_BIT(GEN_FILT_COEFF8,        4)
REGDEF_BIT(GEN_FILT_COEFF9,        4)
REGDEF_END(GENERAL_FILTER_REGISTER_1)


/*
    EDGE_FILT1_COEFF0:    [0x0, 0x1f],          bits : 4_0
    EDGE_FILT1_COEFF1:    [0x0, 0x1f],          bits : 9_5
    EDGE_FILT1_COEFF2:    [0x0, 0x1f],          bits : 14_10
    EDGE_FILT1_COEFF3:    [0x0, 0x1f],          bits : 19_15
    EDGE_FILT1_COEFF4:    [0x0, 0x1f],          bits : 24_20
    EDGE_FILT1_COEFF5:    [0x0, 0x1f],          bits : 29_25
*/
#define EDGE_FILTER_REGISTER_0_OFS 0x0030
REGDEF_BEGIN(EDGE_FILTER_REGISTER_0)
REGDEF_BIT(EDGE_FILT1_COEFF0,        5)
REGDEF_BIT(EDGE_FILT1_COEFF1,        5)
REGDEF_BIT(EDGE_FILT1_COEFF2,        5)
REGDEF_BIT(EDGE_FILT1_COEFF3,        5)
REGDEF_BIT(EDGE_FILT1_COEFF4,        5)
REGDEF_BIT(EDGE_FILT1_COEFF5,        5)
REGDEF_END(EDGE_FILTER_REGISTER_0)


/*
    EDGE_FILT1_COEFF6:    [0x0, 0x1f],          bits : 4_0
    EDGE_FILT1_COEFF7:    [0x0, 0x1f],          bits : 9_5
    EDGE_FILT1_COEFF8:    [0x0, 0x1f],          bits : 14_10
    EDGE_FILT2_COEFF0:    [0x0, 0x1f],          bits : 19_15
    EDGE_FILT2_COEFF1:    [0x0, 0x1f],          bits : 24_20
    EDGE_FILT2_COEFF2:    [0x0, 0x1f],          bits : 29_25
*/
#define EDGE_FILTER_REGISTER_1_OFS 0x0034
REGDEF_BEGIN(EDGE_FILTER_REGISTER_1)
REGDEF_BIT(EDGE_FILT1_COEFF6,        5)
REGDEF_BIT(EDGE_FILT1_COEFF7,        5)
REGDEF_BIT(EDGE_FILT1_COEFF8,        5)
REGDEF_BIT(EDGE_FILT2_COEFF0,        5)
REGDEF_BIT(EDGE_FILT2_COEFF1,        5)
REGDEF_BIT(EDGE_FILT2_COEFF2,        5)
REGDEF_END(EDGE_FILTER_REGISTER_1)


/*
    EDGE_FILT2_COEFF3:    [0x0, 0x1f],          bits : 4_0
    EDGE_FILT2_COEFF4:    [0x0, 0x1f],          bits : 9_5
    EDGE_FILT2_COEFF5:    [0x0, 0x1f],          bits : 14_10
    EDGE_FILT2_COEFF6:    [0x0, 0x1f],          bits : 19_15
    EDGE_FILT2_COEFF7:    [0x0, 0x1f],          bits : 24_20
    EDGE_FILT2_COEFF8:    [0x0, 0x1f],          bits : 29_25
*/
#define EDGE_FILTER_REGISTER_2_OFS 0x0038
REGDEF_BEGIN(EDGE_FILTER_REGISTER_2)
REGDEF_BIT(EDGE_FILT2_COEFF3,        5)
REGDEF_BIT(EDGE_FILT2_COEFF4,        5)
REGDEF_BIT(EDGE_FILT2_COEFF5,        5)
REGDEF_BIT(EDGE_FILT2_COEFF6,        5)
REGDEF_BIT(EDGE_FILT2_COEFF7,        5)
REGDEF_BIT(EDGE_FILT2_COEFF8,        5)
REGDEF_END(EDGE_FILTER_REGISTER_2)


/*
    EDGE_THRES_LUT0:    [0x0, 0xff],            bits : 7_0
    EDGE_THRES_LUT1:    [0x0, 0xff],            bits : 15_8
    EDGE_THRES_LUT2:    [0x0, 0xff],            bits : 23_16
    EDGE_THRES_LUT3:    [0x0, 0xff],            bits : 31_24
*/
#define EDGE_THRESHOLD_LUT_REGISTER_0_OFS 0x003c
REGDEF_BEGIN(EDGE_THRESHOLD_LUT_REGISTER_0)
REGDEF_BIT(EDGE_THRES_LUT0,        8)
REGDEF_BIT(EDGE_THRES_LUT1,        8)
REGDEF_BIT(EDGE_THRES_LUT2,        8)
REGDEF_BIT(EDGE_THRES_LUT3,        8)
REGDEF_END(EDGE_THRESHOLD_LUT_REGISTER_0)


/*
    EDGE_THRES_LUT4:    [0x0, 0xff],            bits : 7_0
    EDGE_THRES_LUT5:    [0x0, 0xff],            bits : 15_8
    EDGE_THRES_LUT6:    [0x0, 0xff],            bits : 23_16
    EDGE_THRES_LUT7:    [0x0, 0xff],            bits : 31_24
*/
#define EDGE_THRESHOLD_LUT_REGISTER_1_OFS 0x0040
REGDEF_BEGIN(EDGE_THRESHOLD_LUT_REGISTER_1)
REGDEF_BIT(EDGE_THRES_LUT4,        8)
REGDEF_BIT(EDGE_THRES_LUT5,        8)
REGDEF_BIT(EDGE_THRES_LUT6,        8)
REGDEF_BIT(EDGE_THRES_LUT7,        8)
REGDEF_END(EDGE_THRESHOLD_LUT_REGISTER_1)


/*
    EDGE_THRES_LUT8 :    [0x0, 0xff],           bits : 7_0
    EDGE_THRES_LUT9 :    [0x0, 0xff],           bits : 15_8
    EDGE_THRES_LUT10:    [0x0, 0xff],           bits : 23_16
    EDGE_THRES_LUT11:    [0x0, 0xff],           bits : 31_24
*/
#define EDGE_THRESHOLD_LUT_REGISTER_2_OFS 0x0044
REGDEF_BEGIN(EDGE_THRESHOLD_LUT_REGISTER_2)
REGDEF_BIT(EDGE_THRES_LUT8,        8)
REGDEF_BIT(EDGE_THRES_LUT9,        8)
REGDEF_BIT(EDGE_THRES_LUT10,        8)
REGDEF_BIT(EDGE_THRES_LUT11,        8)
REGDEF_END(EDGE_THRESHOLD_LUT_REGISTER_2)


/*
    EDGE_THRES_LUT12:    [0x0, 0xff],           bits : 7_0
    EDGE_THRES_LUT13:    [0x0, 0xff],           bits : 15_8
    EDGE_THRES_LUT14:    [0x0, 0xff],           bits : 23_16
*/
#define EDGE_THRESHOLD_LUT_REGISTER_3_OFS 0x0048
REGDEF_BEGIN(EDGE_THRESHOLD_LUT_REGISTER_3)
REGDEF_BIT(EDGE_THRES_LUT12,        8)
REGDEF_BIT(EDGE_THRES_LUT13,        8)
REGDEF_BIT(EDGE_THRES_LUT14,        8)
REGDEF_BIT(EDGE_MAG_TH,        8)
REGDEF_END(EDGE_THRESHOLD_LUT_REGISTER_3)


/*
    NEIGH0_EN :    [0x0, 0x1],          bits : 0
    NEIGH1_EN :    [0x0, 0x1],          bits : 1
    NEIGH2_EN :    [0x0, 0x1],          bits : 2
    NEIGH3_EN :    [0x0, 0x1],          bits : 3
    NEIGH4_EN :    [0x0, 0x1],          bits : 4
    NEIGH5_EN :    [0x0, 0x1],          bits : 5
    NEIGH6_EN :    [0x0, 0x1],          bits : 6
    NEIGH7_EN :    [0x0, 0x1],          bits : 7
    NEIGH8_EN :    [0x0, 0x1],          bits : 8
    NEIGH9_EN :    [0x0, 0x1],          bits : 9
    NEIGH10_EN:    [0x0, 0x1],          bits : 10
    NEIGH11_EN:    [0x0, 0x1],          bits : 11
    NEIGH12_EN:    [0x0, 0x1],          bits : 12
    NEIGH13_EN:    [0x0, 0x1],          bits : 13
    NEIGH14_EN:    [0x0, 0x1],          bits : 14
    NEIGH15_EN:    [0x0, 0x1],          bits : 15
    NEIGH16_EN:    [0x0, 0x1],          bits : 16
    NEIGH17_EN:    [0x0, 0x1],          bits : 17
    NEIGH18_EN:    [0x0, 0x1],          bits : 18
    NEIGH19_EN:    [0x0, 0x1],          bits : 19
    NEIGH20_EN:    [0x0, 0x1],          bits : 20
    NEIGH21_EN:    [0x0, 0x1],          bits : 21
    NEIGH22_EN:    [0x0, 0x1],          bits : 22
    NEIGH23_EN:    [0x0, 0x1],          bits : 23
*/
#define MORPHOLOGICAL_FILTER_REGISTER_OFS 0x004c
REGDEF_BEGIN(MORPHOLOGICAL_FILTER_REGISTER)
REGDEF_BIT(NEIGH0_EN,        1)
REGDEF_BIT(NEIGH1_EN,        1)
REGDEF_BIT(NEIGH2_EN,        1)
REGDEF_BIT(NEIGH3_EN,        1)
REGDEF_BIT(NEIGH4_EN,        1)
REGDEF_BIT(NEIGH5_EN,        1)
REGDEF_BIT(NEIGH6_EN,        1)
REGDEF_BIT(NEIGH7_EN,        1)
REGDEF_BIT(NEIGH8_EN,        1)
REGDEF_BIT(NEIGH9_EN,        1)
REGDEF_BIT(NEIGH10_EN,        1)
REGDEF_BIT(NEIGH11_EN,        1)
REGDEF_BIT(NEIGH12_EN,        1)
REGDEF_BIT(NEIGH13_EN,        1)
REGDEF_BIT(NEIGH14_EN,        1)
REGDEF_BIT(NEIGH15_EN,        1)
REGDEF_BIT(NEIGH16_EN,        1)
REGDEF_BIT(NEIGH17_EN,        1)
REGDEF_BIT(NEIGH18_EN,        1)
REGDEF_BIT(NEIGH19_EN,        1)
REGDEF_BIT(NEIGH20_EN,        1)
REGDEF_BIT(NEIGH21_EN,        1)
REGDEF_BIT(NEIGH22_EN,        1)
REGDEF_BIT(NEIGH23_EN,        1)
REGDEF_END(MORPHOLOGICAL_FILTER_REGISTER)



/*
    LL_TABLE_IDX0:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX1:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX2:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX3:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER0_OFS 0x0050
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER0)
REGDEF_BIT(LL_TABLE_IDX0,        8)
REGDEF_BIT(LL_TABLE_IDX1,        8)
REGDEF_BIT(LL_TABLE_IDX2,        8)
REGDEF_BIT(LL_TABLE_IDX3,        8)
REGDEF_END(IVE_LL_FRAME_REGISTER0)


/*
    LL_TABLE_IDX4:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX5:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX6:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX7:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER1_OFS 0x0054
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER1)
REGDEF_BIT(LL_TABLE_IDX4,        8)
REGDEF_BIT(LL_TABLE_IDX5,        8)
REGDEF_BIT(LL_TABLE_IDX6,        8)
REGDEF_BIT(LL_TABLE_IDX7,        8)
REGDEF_END(IVE_LL_FRAME_REGISTER1)


/*
    LL_TABLE_IDX8 :    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX9 :    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX10:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX11:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER2_OFS 0x0058
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER2)
REGDEF_BIT(LL_TABLE_IDX8 ,        8)
REGDEF_BIT(LL_TABLE_IDX9 ,        8)
REGDEF_BIT(LL_TABLE_IDX10,        8)
REGDEF_BIT(LL_TABLE_IDX11,        8)
REGDEF_END(IVE_LL_FRAME_REGISTER2)


/*
    LL_TABLE_IDX12:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX13:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX14:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX15:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER3_OFS 0x005c
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER3)
REGDEF_BIT(LL_TABLE_IDX12,        8)
REGDEF_BIT(LL_TABLE_IDX13,        8)
REGDEF_BIT(LL_TABLE_IDX14,        8)
REGDEF_BIT(LL_TABLE_IDX15,        8)
REGDEF_END(IVE_LL_FRAME_REGISTER3)


/*
    DRAM_OUT_SADDR:    [0x0, 0x1fffffff],           bits : 30_2
*/

#define IVE_LL_ADDRESS_RESISTER_OFS 0x0060
REGDEF_BEGIN(IVE_LL_ADDRESS_RESISTER)
REGDEF_BIT(,        2)
REGDEF_BIT(DRAM_LL_SAI,        30)
REGDEF_END(IVE_LL_ADDRESS_RESISTER)



/*
    Reserved:    [0x0, 0xffffffff],         bits : 31_0
*/
#define IVE_RESERVE_REGISTER0_OFS 0x0064
REGDEF_BEGIN(IVE_RESERVE_REGISTER_0)
REGDEF_BIT(Reserved,        32)
REGDEF_END(IVE_RESERVE_REGISTER_0)


/*
    IVE_DISABLE:    [0x0, 0x1],			bits : 31
    IVE_IDLE  :    [0x0, 0x1],			bits : 32
*/
#define IVE_DMA_DISABLE_REGISTER_OFS 0x0068
REGDEF_BEGIN(IVE_DMA_DISABLE_REGISTER)
REGDEF_BIT(,        30)
REGDEF_BIT(IVE_DISABLE ,        1)
REGDEF_BIT(IVE_IDLE    ,        1)
REGDEF_END(IVE_DMA_DISABLE_REGISTER)


/*
    IVE_IN_BURST_LEN_SEL :    [0x0, 0x3],           bits : 1_0
    IVE_OUT_BURST_LEN_SEL:    [0x0, 0x3],           bits : 3_2
    IVE_DBG_PORT_SEL     :    [0x0, 0x3],           bits : 5_4
*/
#define IVE_BURST_LENGTH_REGISTER_OFS 0x006c
REGDEF_BEGIN(IVE_BURST_LENGTH_REGISTER)
REGDEF_BIT(IVE_IN_BURST_LEN_SEL,        2)
REGDEF_BIT(IVE_OUT_BURST_LEN_SEL,        2)
REGDEF_END(IVE_BURST_LENGTH_REGISTER)


typedef struct {
	//0x0000
	T_ENGINE_CONTROL_REGISTER
	IVE_Register_0000;

	//0x0004
	T_IVE_INTERRUPT_ENABLE_REGISTER
	IVE_Register_0004;

	//0x0008
	T_IVE_INTERRUPT_STATUS_REGISTER
	IVE_Register_0008;

	//0x000c
	T_IVE_TERMINATE_REGISTER
	IVE_Register_000c;

	//0x0010
	T_FUNCTION_ENABLE_REGISTER
	IVE_Register_0010;

	//0x0014
	T_IVE_DMA_INPUT_REGISTER
	IVE_Register_0014;

	//0x0018
	T_IVE_DMA_INPUT_LINE_OFFSET_REGISTER
	IVE_Register_0018;

	//0x001c
	T_IVE_DMA_OUTPUT_RESULT_REGISTER
	IVE_Register_001c;

	//0x0020
	T_IVE_DMA_OUTPUT_LINE_OFFSET_REGISTER
	IVE_Register_0020;

	//0x0024
	T_INPUT_IMAGE_SIZE_REGISTER
	IVE_Register_0024;

	//0x0028
	T_GENERAL_FILTER_REGISTER_0
	IVE_Register_0028;

	//0x002c
	T_GENERAL_FILTER_REGISTER_1
	IVE_Register_002c;

	//0x0030
	T_EDGE_FILTER_REGISTER_0
	IVE_Register_0030;

	//0x0034
	T_EDGE_FILTER_REGISTER_1
	IVE_Register_0034;

	//0x0038
	T_EDGE_FILTER_REGISTER_2
	IVE_Register_0038;

	//0x003c
	T_EDGE_THRESHOLD_LUT_REGISTER_0
	IVE_Register_003c;

	//0x0040
	T_EDGE_THRESHOLD_LUT_REGISTER_1
	IVE_Register_0040;

	//0x0044
	T_EDGE_THRESHOLD_LUT_REGISTER_2
	IVE_Register_0044;

	//0x0048
	T_EDGE_THRESHOLD_LUT_REGISTER_3
	IVE_Register_0048;

	//0x004c
	T_MORPHOLOGICAL_FILTER_REGISTER
	IVE_Register_004c;

    //0x0050
    T_IVE_LL_FRAME_REGISTER0
    IVE_Register_0050;

    //0x0054
    T_IVE_LL_FRAME_REGISTER1
    IVE_Register_0054;

    //0x0058
    T_IVE_LL_FRAME_REGISTER2
    IVE_Register_0058;

    //0x005c
    T_IVE_LL_FRAME_REGISTER3
    IVE_Register_005c;

    //0x0060
    T_IVE_LL_ADDRESS_RESISTER
    IVE_Register_0060;

    //0x0064
    T_IVE_RESERVE_REGISTER_0
    IVE_Register_0064;

	//0x0068
	T_IVE_DMA_DISABLE_REGISTER
    IVE_Register_0068;

	//0x006c
	T_IVE_BURST_LENGTH_REGISTER
	IVE_Register_006c;




	/*
	//0x0050
	T_IRV_THRESHOLD_REGISTER
	IVE_Register_0050;

	//0x0054
	T_IRV_DEBUG_STATUS_REGISTER_0
	IVE_Register_0054;

	//0x0058
	T_IRV_DEBUG_STATUS_REGISTER_1
	IVE_Register_0058;

	//0x005c
	T_IVE_BURST_LENGTH_REGISTER
	IVE_Register_005c;*/

} NT98520_IVE_REG_STRUCT;

/*
    IRV_THR_S:        [0x0, 0x3f],			bits : 9_4
    IRV_THR_H:        [0x0, 0x3f],			bits : 17_12
    MEDN_INVAL_TH:    [0x0, 0x0f],			bits : 23_20
*/
#define IVE_IRV_SETTING_REGISTER0_OFS_528 0x0050
REGDEF_BEGIN(IVE_IRV_SETTING_REGISTER0_528)
REGDEF_BIT(,        			 4)
REGDEF_BIT(IRV_THR_S,            6)
REGDEF_BIT(,                     2)
REGDEF_BIT(IRV_THR_H,            6)
REGDEF_BIT(,                     2)
REGDEF_BIT(MEDN_INVAL_TH,        4)
REGDEF_BIT(,                     8)
REGDEF_END(IVE_IRV_SETTING_REGISTER0_528)

/*
    IRV_MOD_CNT:        [0x0, 0xfffffff],		bits : 27_0
*/
#define IVE_DEBUG_STATUS_REGISTER1_OFS_528 0x0054
REGDEF_BEGIN(IVE_DEBUG_STATUS_REGISTER1_528)
REGDEF_BIT(IRV_MOD_CNT,        	28)
REGDEF_BIT(,                     4)
REGDEF_END(IVE_DEBUG_STATUS_REGISTER1_528)

/*
    IRV_NMOD_CNT:        [0x0, 0xfffffff],		bits : 27_0
*/
#define IVE_DEBUG_STATUS_REGISTER2_OFS_528 0x0058
REGDEF_BEGIN(IVE_DEBUG_STATUS_REGISTER2_528)
REGDEF_BIT(IRV_NMOD_CNT,        28)
REGDEF_BIT(,                     4)
REGDEF_END(IVE_DEBUG_STATUS_REGISTER2_528)

/*
    IVE_DISABLE:    [0x0, 0x1],			bits : 31
    IVE_IDLE  :    [0x0, 0x1],			bits : 32
*/
#define IVE_DMA_DISABLE_REGISTER_OFS_528 0x0068
REGDEF_BEGIN(IVE_DMA_DISABLE_REGISTER_528)
REGDEF_BIT(,                   30)
REGDEF_BIT(IVE_DISABLE ,        1)
REGDEF_BIT(IVE_IDLE    ,        1)
REGDEF_END(IVE_DMA_DISABLE_REGISTER_528)


/*
    LL_TABLE_IDX0:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX1:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX2:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX3:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER0_OFS_528 0x0070
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER0_528)
REGDEF_BIT(LL_TABLE_IDX0,        8)
REGDEF_BIT(LL_TABLE_IDX1,        8)
REGDEF_BIT(LL_TABLE_IDX2,        8)
REGDEF_BIT(LL_TABLE_IDX3,        8)
REGDEF_END(IVE_LL_FRAME_REGISTER0_528)


/*
    LL_TABLE_IDX4:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX5:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX6:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX7:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER1_OFS_528 0x0074
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER1_528)
REGDEF_BIT(LL_TABLE_IDX4,        8)
REGDEF_BIT(LL_TABLE_IDX5,        8)
REGDEF_BIT(LL_TABLE_IDX6,        8)
REGDEF_BIT(LL_TABLE_IDX7,        8)
REGDEF_END(IVE_LL_FRAME_REGISTER1_528)


/*
    LL_TABLE_IDX8 :    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX9 :    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX10:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX11:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER2_OFS_528 0x0078
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER2_528)
REGDEF_BIT(LL_TABLE_IDX8 ,        8)
REGDEF_BIT(LL_TABLE_IDX9 ,        8)
REGDEF_BIT(LL_TABLE_IDX10,        8)
REGDEF_BIT(LL_TABLE_IDX11,        8)
REGDEF_END(IVE_LL_FRAME_REGISTER2_528)


/*
    LL_TABLE_IDX12:    [0x0, 0xff],			bits : 7_0
    LL_TABLE_IDX13:    [0x0, 0xff],			bits : 15_8
    LL_TABLE_IDX14:    [0x0, 0xff],			bits : 23_16
    LL_TABLE_IDX15:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER3_OFS_528 0x007c
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER3_528)
REGDEF_BIT(LL_TABLE_IDX12,        8)
REGDEF_BIT(LL_TABLE_IDX13,        8)
REGDEF_BIT(LL_TABLE_IDX14,        8)
REGDEF_BIT(LL_TABLE_IDX15,        8)
REGDEF_END(IVE_LL_FRAME_REGISTER3_528)

typedef struct {
	//0x0000
	T_ENGINE_CONTROL_REGISTER
	IVE_Register_0000;

	//0x0004
	T_IVE_INTERRUPT_ENABLE_REGISTER
	IVE_Register_0004;

	//0x0008
	T_IVE_INTERRUPT_STATUS_REGISTER
	IVE_Register_0008;

	//0x000c
	T_IVE_TERMINATE_REGISTER
	IVE_Register_000c;

	//0x0010
	T_FUNCTION_ENABLE_REGISTER
	IVE_Register_0010;

	//0x0014
	T_IVE_DMA_INPUT_REGISTER
	IVE_Register_0014;

	//0x0018
	T_IVE_DMA_INPUT_LINE_OFFSET_REGISTER
	IVE_Register_0018;

	//0x001c
	T_IVE_DMA_OUTPUT_RESULT_REGISTER
	IVE_Register_001c;

	//0x0020
	T_IVE_DMA_OUTPUT_LINE_OFFSET_REGISTER
	IVE_Register_0020;

	//0x0024
	T_INPUT_IMAGE_SIZE_REGISTER
	IVE_Register_0024;

	//0x0028
	T_GENERAL_FILTER_REGISTER_0
	IVE_Register_0028;

	//0x002c
	T_GENERAL_FILTER_REGISTER_1
	IVE_Register_002c;

	//0x0030
	T_EDGE_FILTER_REGISTER_0
	IVE_Register_0030;

	//0x0034
	T_EDGE_FILTER_REGISTER_1
	IVE_Register_0034;

	//0x0038
	T_EDGE_FILTER_REGISTER_2
	IVE_Register_0038;

	//0x003c
	T_EDGE_THRESHOLD_LUT_REGISTER_0
	IVE_Register_003c;

	//0x0040
	T_EDGE_THRESHOLD_LUT_REGISTER_1
	IVE_Register_0040;

	//0x0044
	T_EDGE_THRESHOLD_LUT_REGISTER_2
	IVE_Register_0044;

	//0x0048
	T_EDGE_THRESHOLD_LUT_REGISTER_3
	IVE_Register_0048;

	//0x004c
	T_MORPHOLOGICAL_FILTER_REGISTER
	IVE_Register_004c;

	//0x0050
	T_IVE_IRV_SETTING_REGISTER0_528
	IVE_Register_0050;

	//0x0054
	T_IVE_DEBUG_STATUS_REGISTER1_528
	IVE_Register_0054;

	//0x0058
	T_IVE_DEBUG_STATUS_REGISTER2_528
	IVE_Register_0058;

    //0x005c
    T_IVE_LL_FRAME_REGISTER0_528
    IVE_Register_005c;

    //0x0060
    T_IVE_LL_FRAME_REGISTER1_528
    IVE_Register_0060;

    //0x0064
    T_IVE_LL_FRAME_REGISTER2_528
    IVE_Register_0064;

    //0x0068
    T_IVE_DMA_DISABLE_REGISTER_528
    IVE_Register_0068;

	/*
    //0x006c
    T_IVE_LL_ADDRESS_RESISTER_528
    IVE_Register_006c;

    //0x0070
    T_IVE_DMA_DISABLE_REGISTER_528
    IVE_Register_0070;

	//0x0074
	T_IVE_BURST_LENGTH_REGISTER_528
    IVE_Register_0074;

	//0x0050
	T_IRV_THRESHOLD_REGISTER
	IVE_Register_0050;

	//0x0054
	T_IRV_DEBUG_STATUS_REGISTER_0
	IVE_Register_0054;

	//0x0058
	T_IRV_DEBUG_STATUS_REGISTER_1
	IVE_Register_0058;

	//0x005c
	T_IVE_BURST_LENGTH_REGISTER
	IVE_Register_005c;*/

} NT98528_IVE_REG_STRUCT;

/*
	INTEGRAL_FMT:        [0x0, 0x3],			bits : 1_0
*/
#define IVE_INTEGRAL_IMG_FMT_REGISTER_OFS_560 0x005c
REGDEF_BEGIN(IVE_INTEGRAL_IMG_FMT_REGISTER_560)
REGDEF_BIT(INTEGRAL_FMT, 2)
REGDEF_END(IVE_INTEGRAL_IMG_FMT_REGISTER_560)

/*
	LL_TABLE_IDX0:    [0x0, 0xff],			bits : 7_0
	LL_TABLE_IDX1:    [0x0, 0xff],			bits : 15_8
	LL_TABLE_IDX2:    [0x0, 0xff],			bits : 23_16
	LL_TABLE_IDX3:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER0_OFS_560 0x0070
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER0_560)
REGDEF_BIT(LL_TABLE_IDX0, 8)
REGDEF_BIT(LL_TABLE_IDX1, 8)
REGDEF_BIT(LL_TABLE_IDX2, 8)
REGDEF_BIT(LL_TABLE_IDX3, 8)
REGDEF_END(IVE_LL_FRAME_REGISTER0_560)


/*
	LL_TABLE_IDX4:    [0x0, 0xff],			bits : 7_0
	LL_TABLE_IDX5:    [0x0, 0xff],			bits : 15_8
	LL_TABLE_IDX6:    [0x0, 0xff],			bits : 23_16
	LL_TABLE_IDX7:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER1_OFS_560 0x0074
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER1_560)
REGDEF_BIT(LL_TABLE_IDX4, 8)
REGDEF_BIT(LL_TABLE_IDX5, 8)
REGDEF_BIT(LL_TABLE_IDX6, 8)
REGDEF_BIT(LL_TABLE_IDX7, 8)
REGDEF_END(IVE_LL_FRAME_REGISTER1_560)


/*
	LL_TABLE_IDX8 :    [0x0, 0xff],			bits : 7_0
	LL_TABLE_IDX9 :    [0x0, 0xff],			bits : 15_8
	LL_TABLE_IDX10:    [0x0, 0xff],			bits : 23_16
	LL_TABLE_IDX11:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER2_OFS_560 0x0078
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER2_560)
REGDEF_BIT(LL_TABLE_IDX8, 8)
REGDEF_BIT(LL_TABLE_IDX9, 8)
REGDEF_BIT(LL_TABLE_IDX10, 8)
REGDEF_BIT(LL_TABLE_IDX11, 8)
REGDEF_END(IVE_LL_FRAME_REGISTER2_560)


/*
	LL_TABLE_IDX12:    [0x0, 0xff],			bits : 7_0
	LL_TABLE_IDX13:    [0x0, 0xff],			bits : 15_8
	LL_TABLE_IDX14:    [0x0, 0xff],			bits : 23_16
	LL_TABLE_IDX15:    [0x0, 0xff],			bits : 31_24
*/
#define IVE_LL_FRAME_REGISTER3_OFS_560 0x007c
REGDEF_BEGIN(IVE_LL_FRAME_REGISTER3_560)
REGDEF_BIT(LL_TABLE_IDX12, 8)
REGDEF_BIT(LL_TABLE_IDX13, 8)
REGDEF_BIT(LL_TABLE_IDX14, 8)
REGDEF_BIT(LL_TABLE_IDX15, 8)
REGDEF_END(IVE_LL_FRAME_REGISTER3_560)

/*
	LLC_CHECKSUM:        [0x0, 0xffffffff],			bits : 31_0
*/
#define IVE_DESIGN_DEBUG_REGISTER1_OFS_560 0x0080
REGDEF_BEGIN(IVE_DESIGN_DEBUG_REGISTER1_560)
REGDEF_BIT(LLC_CHECKSUM, 32)
REGDEF_END(IVE_DESIGN_DEBUG_REGISTER1_560)


/*
	LLC_CMD_CNT:        [0x0, 0xffffffff],			bits : 31_0
*/
#define IVE_DESIGN_DEBUG_REGISTER2_OFS_560 0x0084
REGDEF_BEGIN(IVE_DESIGN_DEBUG_REGISTER2_560)
REGDEF_BIT(LLC_CMD_CNT, 32)
REGDEF_END(IVE_DESIGN_DEBUG_REGISTER2_560)

/*
	LLC_CMD_ADDR:        [0x0, 0xffffffff],			bits : 31_0
*/
#define IVE_DESIGN_DEBUG_REGISTER3_OFS_560 0x0088
REGDEF_BEGIN(IVE_DESIGN_DEBUG_REGISTER3_560)
REGDEF_BIT(LLC_CMD_ADDR, 32)
REGDEF_END(IVE_DESIGN_DEBUG_REGISTER3_560)

/*
	CYCLE_CNT:        [0x0, 0xffffffff],			bits : 31_0
*/
#define IVE_DESIGN_DEBUG_REGISTER4_OFS_560 0x0090
REGDEF_BEGIN(IVE_DESIGN_DEBUG_REGISTER4_560)
REGDEF_BIT(CYCLE_CNT, 32)
REGDEF_END(IVE_DESIGN_DEBUG_REGISTER4_560)

/*
	LL_CYCLE_CNT:        [0x0, 0xffffffff],			bits : 31_0
*/
#define IVE_DESIGN_DEBUG_REGISTER5_OFS_560 0x0094
REGDEF_BEGIN(IVE_DESIGN_DEBUG_REGISTER5_560)
REGDEF_BIT(LL_CYCLE_CNT, 32)
REGDEF_END(IVE_DESIGN_DEBUG_REGISTER5_560)

/*
	IN_CH_CHECKSUM:        [0x0, 0xffffffff],			bits : 31_0
*/
#define IVE_DESIGN_DEBUG_REGISTER6_OFS_560 0x0098
REGDEF_BEGIN(IVE_DESIGN_DEBUG_REGISTER6_560)
REGDEF_BIT(IN_CH_CHECKSUM, 32)
REGDEF_END(IVE_DESIGN_DEBUG_REGISTER6_560)

/*
	OUT_CH_CHECKSUM:        [0x0, 0xffffffff],			bits : 31_0
*/
#define IVE_DESIGN_DEBUG_REGISTER7_OFS_560 0x009c
REGDEF_BEGIN(IVE_DESIGN_DEBUG_REGISTER7_560)
REGDEF_BIT(OUT_CH_CHECKSUM, 32)
REGDEF_END(IVE_DESIGN_DEBUG_REGISTER7_560)

typedef struct {
	//0x005c
	T_IVE_INTEGRAL_IMG_FMT_REGISTER_560
		IVE_Register_005c;
	//0x0070
	T_IVE_LL_FRAME_REGISTER0_560
		IVE_Register_0070;
	//0x0074
	T_IVE_LL_FRAME_REGISTER1_560
		IVE_Register_0074;
	//0x0078
	T_IVE_LL_FRAME_REGISTER2_560
		IVE_Register_0078;
	//0x007c
	T_IVE_LL_FRAME_REGISTER3_560
		IVE_Register_007c;
	//0x0080
	T_IVE_DESIGN_DEBUG_REGISTER1_560
		IVE_Register_0080;
	//0x0084
	T_IVE_DESIGN_DEBUG_REGISTER2_560
		IVE_Register_0084;
	//0x0088
	T_IVE_DESIGN_DEBUG_REGISTER3_560
		IVE_Register_0088;
	//0x0090
	T_IVE_DESIGN_DEBUG_REGISTER4_560
		IVE_Register_0090;
	//0x0094
	T_IVE_DESIGN_DEBUG_REGISTER5_560
		IVE_Register_0094;
	//0x0098
	T_IVE_DESIGN_DEBUG_REGISTER6_560
		IVE_Register_0098;
	//0x009c
	T_IVE_DESIGN_DEBUG_REGISTER7_560
		IVE_Register_009c;

} NT98560_IVE_REG_STRUCT;
#endif
